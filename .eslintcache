[{"E:\\Identity\\src\\index.js":"1","E:\\Identity\\src\\App.js":"2","E:\\Identity\\src\\Pages\\Citizen.js":"3","E:\\Identity\\src\\Pages\\LandingHome.js":"4","E:\\Identity\\src\\Pages\\Home.js":"5","E:\\Identity\\src\\Pages\\ShowUnionCouncil.js":"6","E:\\Identity\\src\\Pages\\ShowWeapon.js":"7","E:\\Identity\\src\\Pages\\UnionLogin.js":"8","E:\\Identity\\src\\Pages\\WeaponLogin.js":"9","E:\\Identity\\src\\Pages\\UnionCounci.js":"10","E:\\Identity\\src\\Pages\\TrafficChallan.js":"11","E:\\Identity\\src\\Pages\\WeaponLisence.js":"12","E:\\Identity\\src\\Pages\\ShowEducation.js":"13","E:\\Identity\\src\\Pages\\TrafficLogin.js":"14","E:\\Identity\\src\\Pages\\CriminalRecord.js":"15","E:\\Identity\\src\\Pages\\CriminalLogin.js":"16","E:\\Identity\\src\\Pages\\EducationLogin.js":"17","E:\\Identity\\src\\Pages\\Death.js":"18","E:\\Identity\\src\\Pages\\ShowCriminal.js":"19","E:\\Identity\\src\\Pages\\Educations.js":"20","E:\\Identity\\src\\Pages\\MerriageRecord.js":"21","E:\\Identity\\src\\Pages\\MarriageLogin.js":"22","E:\\Identity\\src\\Pages\\ShowChallan.js":"23","E:\\Identity\\src\\Pages\\Navbar.js":"24","E:\\Identity\\src\\context\\GlobalState.js":"25","E:\\Identity\\src\\store\\asyncActions.js":"26","E:\\Identity\\src\\store\\AppReducer.js":"27","E:\\Identity\\src\\store\\actions.js":"28","E:\\Identity\\src\\contract\\NationConract.js":"29"},{"size":147,"mtime":1611496722000,"results":"30","hashOfConfig":"31"},{"size":3956,"mtime":1655676084000,"results":"32","hashOfConfig":"31"},{"size":11471,"mtime":1655672744000,"results":"33","hashOfConfig":"31"},{"size":5995,"mtime":1683266034502,"results":"34","hashOfConfig":"31"},{"size":8964,"mtime":1678253089988,"results":"35","hashOfConfig":"31"},{"size":5467,"mtime":1655674476000,"results":"36","hashOfConfig":"31"},{"size":3586,"mtime":1650315232000,"results":"37","hashOfConfig":"31"},{"size":2218,"mtime":1655675892000,"results":"38","hashOfConfig":"31"},{"size":2155,"mtime":1655675122000,"results":"39","hashOfConfig":"31"},{"size":11472,"mtime":1678176096358,"results":"40","hashOfConfig":"31"},{"size":6221,"mtime":1629317668000,"results":"41","hashOfConfig":"31"},{"size":7275,"mtime":1655676432000,"results":"42","hashOfConfig":"31"},{"size":3629,"mtime":1650312772000,"results":"43","hashOfConfig":"31"},{"size":2155,"mtime":1655676870000,"results":"44","hashOfConfig":"31"},{"size":5843,"mtime":1655675338000,"results":"45","hashOfConfig":"31"},{"size":2222,"mtime":1655674936000,"results":"46","hashOfConfig":"31"},{"size":2170,"mtime":1655674882000,"results":"47","hashOfConfig":"31"},{"size":3608,"mtime":1655674604000,"results":"48","hashOfConfig":"31"},{"size":3208,"mtime":1650316328000,"results":"49","hashOfConfig":"31"},{"size":16794,"mtime":1655675290000,"results":"50","hashOfConfig":"31"},{"size":6502,"mtime":1655675628000,"results":"51","hashOfConfig":"31"},{"size":2160,"mtime":1655674998000,"results":"52","hashOfConfig":"31"},{"size":8671,"mtime":1655676718000,"results":"53","hashOfConfig":"31"},{"size":5557,"mtime":1655677024000,"results":"54","hashOfConfig":"31"},{"size":928,"mtime":1655660832000,"results":"55","hashOfConfig":"31"},{"size":5394,"mtime":1655671040000,"results":"56","hashOfConfig":"31"},{"size":1082,"mtime":1655660132000,"results":"57","hashOfConfig":"31"},{"size":904,"mtime":1655660426000,"results":"58","hashOfConfig":"31"},{"size":12807,"mtime":1676619126000,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"189v3f0",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"62"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"E:\\Identity\\src\\index.js",[],["138","139"],"E:\\Identity\\src\\App.js",[],"E:\\Identity\\src\\Pages\\Citizen.js",["140","141","142","143","144","145","146","147","148","149","150"],"import { useStore } from \"../context/GlobalState\";\nimport React, { useState, useEffect } from \"react\";\nimport { AddPayChallan } from \"../store/asyncActions\";\nimport Loader from \"../images/loader.gif\";\nimport { Table } from \"react-bootstrap\";\n\nfunction Citizen() {\n  const [citizen_UnionCouncil,set_citizen_UnionCouncil] = useState([]);\n  const [citizen_Education,set_citizen_Education] = useState([]);\n  const [citizen_Weapon,set_citizen_Weapon] = useState([]);\n  const [citizen_TrafficChallan,set_citizen_TrafficChallan] = useState([]);\n  const [citizen_CriminalRecord,set_citizen_CriminalRecord] = useState([]);\n    \n  const [{ contract, accounts }, dispatch] = useStore();\n  const [cnic, setcnic] = useState(\"\");\n  const [isTransactionInProcess, setTransactionInprocess] = useState(false);\n  const [isTransactionSuccessful, setTransactionSuccessful] = useState(true);\n  const [transactionError, setTransactionError] = useState(\"\");\n\n  const handleSubmit1 = async () => {\n\n      set_citizen_UnionCouncil([])\n      set_citizen_Education([])\n      set_citizen_Weapon([])\n      set_citizen_CriminalRecord([])\n      set_citizen_TrafficChallan([])\n   \n     let union_data = await contract.methods.UnionConcilData(cnic).call();\n     set_citizen_UnionCouncil(citizen_UnionCouncil => [...citizen_UnionCouncil, union_data])\n\n     for(var i=0; i<2; i++){\n      try{ \n        let education_data = await contract.methods.EducationData(cnic,i).call();\n        set_citizen_Education(citizen_Education => [...citizen_Education, education_data])\n      }catch(error){}\n     }\n\n     let weapon_data = await contract.methods.WeaponLisenceData(cnic).call();\n     set_citizen_Weapon(citizen_Weapon => [...citizen_Weapon, weapon_data]);\n\n     for(var i=0; i<3; i++){\n      try{\n        let criminal_data = await contract.methods.CriminalRecordData(cnic,i).call();\n        set_citizen_CriminalRecord(citizen_CriminalRecord => [...citizen_CriminalRecord, criminal_data]);\n      }catch(error){}\n     }\n\n     for(var i=0; i<3; i++){\n      try{\n       let challan_data = await contract.methods.TrafficChallanData(cnic,i).call();\n       set_citizen_TrafficChallan(citizen_TrafficChallan => [...citizen_TrafficChallan, challan_data]);\n      }catch(error){}\n     }\n  };  \n\n  var challan_fee, dates, date2, cnics, vehicles, ch_type;\n\n  function setchallanfee(ac, cnic, vehicle, date, c_type) {\n    challan_fee = ac;\n    cnics = cnic;\n    vehicles = vehicle;\n    ch_type = c_type;\n    dates = new Date(date);\n    date2 = (dates.getTime() / 1000).toFixed(0);\n  }\n\n  async function payChallan() {\n    console.log(\"fee\", challan_fee);\n    console.log(\"date\", date2);\n    console.log(\"cnic\", cnics);\n    console.log(\"type\", ch_type);\n    console.log(\"vehicle\", vehicles);\n\n    setTransactionSuccessful(true);\n    setTransactionError(\"\");\n\n    try {\n      setTransactionInprocess(true);\n      const newTransaction = {\n        cnic: cnics,\n        vehicle_no: vehicles,\n        date: date2,\n        challan_type: String(ch_type),\n        challan_fee: challan_fee,\n      };\n      await AddPayChallan(contract, accounts, newTransaction, dispatch);\n\n      setTransactionInprocess(false);\n      setTransactionSuccessful(true);\n    } catch (error) {\n      console.log(\"error trax = \", error);\n      setTransactionInprocess(false);\n      setTransactionSuccessful(false);\n      setTransactionError(error.message);\n    }\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"d-flex justify-content-between\">\n        <h2>Citizen</h2>\n      </div>\n      <div className=\"row mt-5\">\n        <div className=\"col-8\">\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\" id=\"basic-addon1\">\n                <i className=\"fas fa-search\"></i>\n              </span>\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your CNIC\"\n              aria-label=\"Username\"\n              aria-describedby=\"basic-addon1\"\n              onChange={(e) => {\n                setcnic(e.target.value);\n              }}\n            />\n            &nbsp;\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <input\n            type=\"button\"\n            className=\"form-control\"\n            value=\"Search\"\n            onClick={handleSubmit1}\n          />\n        </div>\n        <div className=\"col-12\">\n          <br />\n          <h3>Union Council</h3>\n          <Table striped bordered hover className=\"mt-5\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">CNIC</th>\n                <th scope=\"col\">Father Name</th>\n                <th scope=\"col\">Mother Name</th>\n                <th scope=\"col\">Father CNIC</th>\n                <th scope=\"col\">Mother CNIC</th>\n                <th scope=\"col\">Gender</th>\n                <th scope=\"col\">Date of Birth</th>\n                <th scope=\"col\">City</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {citizen_UnionCouncil.map((na) => {\n                var date2 = new Date(na.dob * 1000);\n                var day = date2.getDate();\n                var month = date2.getMonth() + 1;\n                var year = date2.getFullYear();\n\n                return (\n                  <tr>\n                    <td>{na.name}</td>\n                    <td>{na.cnic}</td>\n                    <td>{na.f_name}</td>\n                    <td>{na.m_name}</td>\n                    <td>{na.f_cnic}</td>\n                    <td>{na.m_cnic}</td>\n                    <td>{na.gender}</td>\n                    <td>{na.dob == 0 ? null : day + \"/\" + month + \"/\" + year}</td>\n                    <td>{na.city}</td>\n                    <td>{na.isDied == true ? \"Die\" : \"Alive\"}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n\n      <div className=\"col-12\">\n        <br />\n        <h3>Educations</h3>\n        <Table striped bordered hover className=\"mt-5\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Subject</th>\n              <th scope=\"col\">Marks</th>\n              <th scope=\"col\">Precentage</th>\n              <th scope=\"col\">Grade</th>\n              <th scope=\"col\">Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {citizen_Education.map((na) => {\n                var date2 = new Date(na.date * 1000);\n                var day = date2.getDate();\n                var month = date2.getMonth() + 1;\n                var year = date2.getFullYear();\n                return (\n                  <tr>\n                    <td>{na.subject}</td>\n                    <td>{na.marks}</td>\n                    <td>{na.percentage}</td>\n                    <td>{na.grade}</td>\n                    <td>{day + \"/\" + month + \"/\" + year}</td>\n                  </tr>\n                );\n            })}\n          </tbody>\n        </Table>\n      </div>\n\n      <div className=\"col-12\">\n        <br />\n        <h3>Weapon Lisence</h3>\n        <Table striped bordered hover className=\"mt-5\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Weapon Type</th>\n              <th scope=\"col\">Lisence #</th>\n              <th scope=\"col\">Status</th>\n              <th scope=\"col\">Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {citizen_Weapon.map((na) => {\n              var date2 = new Date(na.date * 1000);\n              var day = date2.getDate();\n              var month = date2.getMonth() + 1;\n              var year = date2.getFullYear();\n              return (\n                <tr>\n                  <td>{na.weapon_type}</td>\n                  <td>{na.lisence_no}</td>\n                  <td>{na.weapon_issued == true ? \"Issued\" : \"Banned\"}</td>\n                  <td>\n                    {na.date == 0 ? null : day + \"/\" + month + \"/\" + year}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n\n      <div className=\"col-12\">\n        <br />\n        <h3>Criminal Record</h3>\n        <Table striped bordered hover className=\"mt-5\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Record Found</th>\n              <th scope=\"col\">Remarks</th>\n              <th scope=\"col\">Date</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {citizen_CriminalRecord.map((na) => {\n                var date2 = new Date(na.date * 1000);\n                var day = date2.getDate();\n                var month = date2.getMonth() + 1;\n                var year = date2.getFullYear();\n\n                return (\n                  <tr>\n                    <td>\n                      {na.record_found == true ? \"Yes\" : null}\n                      {na.record_found == false ? \"No\" : null}\n                    </td>\n                    <td>{na.remarks}</td>\n                    <td>\n                      {na.date == 0 ? null : day + \"/\" + month + \"/\" + year}\n                    </td>\n                  </tr>\n                );\n            })}\n          </tbody>\n        </Table>\n      </div>\n\n      <div className=\"col-12\">\n        <br />\n        <h3>Traffic Challan</h3>\n        <Table striped bordered hover className=\"mt-5\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Vehicle #</th>\n              <th scope=\"col\">Challan Type</th>\n              <th scope=\"col\">Amount</th>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Pay Challan</th>\n            </tr>\n          </thead>\n          <tbody>\n            {citizen_TrafficChallan.map((na) => {\n                var date2 = new Date(na.date * 1000);\n                var day = date2.getDate();\n                var month = date2.getMonth() + 1;\n                var year = date2.getFullYear();\n                return (\n                  <tr>\n                    <td>{na.vehicle_no}</td>\n                    <td>{na.challan_type}</td>\n                    <td>{na.amount}</td>\n                    <td>{day + \"/\" + month + \"/\" + year}</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={() => {\n                          var date = new Date();\n                          setchallanfee(\n                            na.amount,\n                            na.cnic,\n                            na.vehicle_no,\n                            date,\n                            String(na.challan_type),\n                          );\n                          payChallan();\n                        }}\n                      >\n                        Pay\n                      </button>\n                      {isTransactionInProcess && (\n                        <img width=\"40px\" src={Loader} alt=\"Loading...\" />\n                      )}\n                      {isTransactionSuccessful == true ? (\n                        <div style={{ color: \"green\" }}></div>\n                      ) : null}\n                      {!isTransactionSuccessful && (\n                        <div style={{ color: \"red\" }}>{transactionError}</div>\n                      )}\n                    </td>\n                  </tr>\n                );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default Citizen;\n","E:\\Identity\\src\\Pages\\LandingHome.js",["151","152"],"import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LandingHome = () => {\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //   let token = localStorage.getItem(\"token\");\n  //   if (!token) {\n  //     navigate(\"/login\");\n  //   }\n  // }, []);\n  return (\n    <div className=\"main-wrapper main-wrapper-1 const-landing\">\n      {/* <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            Blockchain\n          </a>\n        </div>\n      </nav> */}\n      <div className=\"container\">\n        <section className=\"\">\n          <div className=\"\">\n            <div className=\"\">\n              <h1 className=\"const-choose mt-5\">Choose Authentication</h1>\n              <br />\n              <br />\n            </div>\n            <div className=\"section-body\">\n              <div className=\"row\">\n                <div className=\"col-12 col-md-3 col-lg-3\">\n                  <div className=\"pricing const-citizen\">\n                    {/* <div className=\"pricing-title\">Authentication</div> */}\n                    <div className=\"text-center card-height \">\n                      <div className=\"pricing-price\">\n                        <div>Union</div>\n                      </div>\n                    </div>\n                    <div className=\"pricing-cta mt-0\">\n                      <a href=\"/show-union\">\n                        Union<i className=\"fas fa-arrow-right\"></i>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12 col-md-3 col-lg-3\">\n                  <div className=\"pricing const-education pricing-highlight\">\n                    {/* <div className=\"pricing-title\">Authentication</div> */}\n                    <div className=\"text-center card-height \">\n                      <div className=\"pricing-price\">\n                        <div>Education</div>\n                      </div>\n                    </div>\n                    <div className=\"pricing-cta mt-0\">\n                      <a href=\"/show-education\">\n                        Education<i className=\"fas fa-arrow-right\"></i>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12 col-md-3 col-lg-3\">\n                  <div className=\"pricing const-weapon\">\n                    {/* <div className=\"pricing-title\">Authentication</div> */}\n                    <div className=\"text-center card-height \">\n                      <div className=\"pricing-price\">\n                        <div>Weapon</div>\n                      </div>\n                    </div>\n                    <div className=\"pricing-cta mt-0\">\n                      <a href=\"/show-weapon\">\n                        Weapon<i className=\"fas fa-arrow-right\"></i>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12 col-md-3 col-lg-3\">\n                  <div className=\"pricing const-citizen pricing-highlight\">\n                    {/* <div className=\"pricing-title\">Authentication</div> */}\n                    <div className=\"text-center card-height \">\n                      <div className=\"pricing-price\">\n                        <div>Criminal</div>\n                      </div>\n                    </div>\n                    <div className=\"pricing-cta mt-0\">\n                      <a href=\"/show-criminal\">\n                        Criminal<i className=\"fas fa-arrow-right\"></i>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12 col-md-3 col-lg-3\">\n                  <div className=\"pricing const-traffic\">\n                    {/* <div className=\"pricing-title\">Authentication</div> */}\n                    <div className=\"text-center card-height \">\n                      <div className=\"pricing-price\">\n                        <div>Traffic</div>\n                      </div>\n                    </div>\n                    <div className=\"pricing-cta mt-0\">\n                      <a href=\"/show-challan\">\n                        Traffic<i className=\"fas fa-arrow-right\"></i>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n\n                <div></div>\n                {/* <div className=\"col-12 col-md-3 col-lg-3\">\n                  <div className=\"pricing const-citizen pricing-highlight\">\n                   \n                    <div className=\"text-center card-height \">\n                      <div className=\"pricing-price\">\n                        <div>Marriage</div>\n                      </div>\n                    </div>\n                    <div className=\"pricing-cta mt-0\">\n                      <a href=\"/marriage\">\n                        Marriage<i className=\"fas fa-arrow-right\"></i>\n                      </a>\n                    </div>\n                  </div>\n                </div> */}\n\n                <div className=\"col-12 col-md-3 col-lg-3\">\n                  <div className=\"pricing const-citizen\">\n                    {/* <div className=\"pricing-title\">Authentication</div> */}\n                    <div className=\"text-center card-height \">\n                      <div className=\"pricing-price\">\n                        <div>Citizen</div>\n                      </div>\n                    </div>\n                    <div className=\"pricing-cta mt-0\">\n                      <a href=\"/citizen\">\n                        Citizen<i className=\"fas fa-arrow-right\"></i>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingHome;\n","E:\\Identity\\src\\Pages\\Home.js",["153","154","155","156","157","158"],"import React, { useEffect } from \"react\";\r\nimport digit_card from \"../images/digital_card.png\";\r\nimport \"./style2.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"body\">\r\n      <section className=\"header-navbar\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Digital Identity\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNavAltMarkup\"\r\n            aria-controls=\"navbarNavAltMarkup\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n            <div className=\"navbar-nav\">\r\n              <a className=\"nav-item nav-link\" href=\"#\">\r\n                Home<span className=\"sr-only\">(current)</span>\r\n              </a>\r\n              <a className=\"nav-item nav-link\" href=\"/landing\">\r\n                Departments\r\n              </a>\r\n              <a className=\"nav-item nav-link\" href=\"#\">\r\n                About Us\r\n              </a>\r\n              <a className=\"nav-item nav-link\" href=\"#\">\r\n                FAQs\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </section>\r\n\r\n      <section className=\"dot-animation\">\r\n        <div id=\"stars\"></div>\r\n        <div id=\"stars2\"></div>\r\n        <div id=\"stars3\"></div>\r\n      </section>\r\n\r\n      <section className=\"body-content\">\r\n        <div id=\"title\">\r\n          <span>WELCOME TO DIGITAL IDENTITY SYSTEM</span>\r\n        </div>\r\n\r\n        <section className=\"sec-1\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm\">\r\n              <p className=\"intro-text\">\r\n                This system record all the data about the person’s birth until\r\n                death with only one identity. The environment of the system\r\n                based on blockchain, which is decentralized and distributed,\r\n                which will increase the security and data protection of the\r\n                system, and all the data will be store on different nodes\r\n                (distributed) in the form of hashes.\r\n              </p>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <img src={digit_card} width=\"80%\"></img>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"sec-2\">\r\n          <div className=\"row justify-content-center\">\r\n            <div id=\"title2\">\r\n              <span>DEPARTMENTS</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row depart-sec\">\r\n            <div className=\"col-sm departments\">\r\n              <span className=\"dept-title\">\r\n                <a href=\"/show-union\">Union Council</a>\r\n              </span>\r\n              <span className=\"dept-detail\">\r\n                Union Council Department is responsible for managing data of\r\n                birth child or death in their union.\r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm departments\">\r\n              <span className=\"dept-title\">\r\n                <a href=\"/challan\">Traffic Challan</a>\r\n              </span>\r\n              <span className=\"dept-detail\">\r\n                Union Council Department is responsible for managing data of\r\n                birth child or death in their union.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row depart-sec\">\r\n            <div className=\"col-sm departments\">\r\n              <span className=\"dept-title\">\r\n                <a href=\"show-weapon\">Weapon</a>\r\n              </span>\r\n              <span className=\"dept-detail\">\r\n                Union Council Department is responsible for managing data of\r\n                birth child or death in their union.\r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm departments\">\r\n              <span className=\"dept-title\">\r\n                <a href=\"/education\">Education</a>\r\n              </span>\r\n              <span className=\"dept-detail\">\r\n                Union Council Department is responsible for managing data of\r\n                birth child or death in their union.\r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm departments\">\r\n              <span className=\"dept-title\">\r\n                <a href=\"/criminal\">Criminal</a>\r\n              </span>\r\n              <span className=\"dept-detail\">\r\n                Union Council Department is responsible for managing data of\r\n                birth child or death in their union.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row depart-sec\">\r\n            <div className=\"col-sm-4 departments\">\r\n              <span className=\"dept-title\">\r\n                <a href=\"/citizen\">View Citizen</a>\r\n              </span>\r\n              <span className=\"dept-detail\">\r\n                Union Council Department is responsible for managing data of\r\n                birth child or death in their union.\r\n              </span>\r\n            </div>\r\n            {/* <div className=\"col-sm departments\">\r\n                  \r\n                </div>\r\n                <div className=\"col-sm departments\">\r\n                   \r\n                </div> */}\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"sec-3\">\r\n          <div className=\"row justify-content-center\">\r\n            <div id=\"title\">\r\n              <span>SYSTEM KEY FEATURES</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <ul className=\"feature-list\">\r\n              <li className=\"feature\">\r\n                Will Connect All the Government sectors on single platform.\r\n              </li>\r\n              <li className=\"feature\">Tracking of it’s citizens</li>\r\n              <li className=\"feature\">Security of Citizen’s data</li>\r\n              <li className=\"feature\">De-Centralized Data Storage</li>\r\n              <li className=\"feature\">No Ownership of data</li>\r\n              <li className=\"feature\">Digital Communication</li>\r\n              <li className=\"feature\">Prototype for Government</li>\r\n              <li className=\"feature\">All Details can be seen on one click </li>\r\n              <li className=\"feature\">Portal For Citizens</li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"sec-4\">\r\n          <div className=\"row justify-content-center\">\r\n            <div id=\"title\">\r\n              <span>ABOUT US</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <ul className=\"feature-list\">\r\n              <li className=\"feature\">\r\n                Will Connect All the Government sectors on single platform.\r\n              </li>\r\n              <li className=\"feature\">Tracking of it’s citizens</li>\r\n              <li className=\"feature\">Security of Citizen’s data</li>\r\n              <li className=\"feature\">De-Centralized Data Storage</li>\r\n              <li className=\"feature\">No Ownership of data</li>\r\n              <li className=\"feature\">Digital Communication</li>\r\n              <li className=\"feature\">Prototype for Government</li>\r\n              <li className=\"feature\">All Details can be seen on one click </li>\r\n              <li className=\"feature\">Portal For Citizens</li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"sec-5\">\r\n          <div className=\"row justify-content-center\">\r\n            <div id=\"title\">\r\n              <span>FAQs</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <ul className=\"feature-list\">\r\n              <li className=\"feature\">\r\n                Will Connect All the Government sectors on single platform.\r\n              </li>\r\n              <li className=\"feature\">Tracking of it’s citizens</li>\r\n              <li className=\"feature\">Security of Citizen’s data</li>\r\n              <li className=\"feature\">De-Centralized Data Storage</li>\r\n              <li className=\"feature\">No Ownership of data</li>\r\n              <li className=\"feature\">Digital Communication</li>\r\n              <li className=\"feature\">Prototype for Government</li>\r\n              <li className=\"feature\">All Details can be seen on one click </li>\r\n              <li className=\"feature\">Portal For Citizens</li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      </section>\r\n\r\n      <style>\r\n        {`\r\n            \r\n            .row{\r\n                margin-left: 0px !important;\r\n                margin-right: 0px !important;\r\n            }\r\n            .navbar-nav{\r\n                width: 100%;\r\n            }\r\n            \r\n            `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","E:\\Identity\\src\\Pages\\ShowUnionCouncil.js",["159","160","161","162","163","164"],"import { useEffect, useState } from \"react\";\r\nimport { useStore } from \"../context/GlobalState\";\r\n\r\nfunction ShowUnionCouncil() {\r\n  var [{ allcnics,contract }] = useStore();\r\n  const [alldata, setalldata] = useState([]);\r\n  const [_cnic, setcnic] = useState(\"\");\r\n\r\n  console.log(allcnics);\r\n\r\n    useEffect(()=>{\r\n      if(allcnics != null){\r\n        allcnics.map(async(obj) => {\r\n            // obj.map(async(na) => {\r\n              let data = await contract.methods.UnionConcilData(obj).call();\r\n              setalldata(alldata => [...alldata, data]);  \r\n            // })\r\n          }) \r\n      }\r\n    },[allcnics])\r\n\r\n    const logOut = () => {\r\n      localStorage.setItem(\"union\", \"false\");\r\n      window.location.href = \"/landing\";\r\n    };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <br />\r\n      <div className=\"d-flex justify-content-between\">\r\n        <h2>Union</h2>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-info\"\r\n            onClick={() => {\r\n              window.location.href = \"/union-council\";\r\n            }}\r\n          >\r\n            Add Union\r\n          </button>\r\n          <button\r\n            className=\"btn btn-info\"\r\n            onClick={() => {\r\n              window.location.href = \"/death\";\r\n            }}\r\n          >\r\n            Add Death Status\r\n          </button>\r\n          <button className=\"btn btn-info\" onClick={logOut}>\r\n            LOGOUT\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-12\">\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Your CNIC\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={(e) => {\r\n                setcnic(e.target.value);\r\n              }}\r\n              required\r\n            />\r\n            &nbsp;\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table\" name=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">CNIC</th>\r\n            <th scope=\"col\">Father Name</th>\r\n            <th scope=\"col\">Mother Name</th>\r\n            <th scope=\"col\">Father CNIC</th>\r\n            <th scope=\"col\">Mother CNIC</th>\r\n            <th scope=\"col\">Gender</th>\r\n            <th scope=\"col\">Date of Birth</th>\r\n            <th scope=\"col\">City</th>\r\n            <th scope=\"col\">Status</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {\r\n            _cnic == \"\" ?\r\n                      alldata.map((obj) => {\r\n                            var date2 = new Date(obj.dob * 1000);\r\n                            var day = date2.getDate();\r\n                            var month = date2.getMonth() + 1;\r\n                            var year = date2.getFullYear();\r\n                            console.log(obj)\r\n                            return (\r\n                              <tr>\r\n                                <td key={obj.name}>{obj.name}</td>\r\n                                <td key={obj.cnic}>{obj.cnic}</td>\r\n                                <td key={obj.f_name}>{obj.f_name}</td>\r\n                                <td key={obj.m_name}>{obj.m_name}</td>\r\n                                <td key={obj.f_cnic}>{obj.f_cnic}</td>\r\n                                <td key={obj.m_cnic}>{obj.m_cnic}</td>\r\n                                <td key={obj.gender}>{obj.gender}</td>\r\n                                <td key={obj.dob}>{day + \"/\" + month + \"/\" + year}</td>\r\n                                <td key={obj.city}>{obj.city}</td>\r\n                                <td key={obj.isDied}>{obj.isDied == true ? \"Die\" : \"Alive\"}</td>\r\n                              </tr>\r\n                            );\r\n                        })\r\n             \r\n               : \r\n                      alldata.map((obj) => {\r\n                        if(_cnic == obj.cnic){\r\n                        var date2 = new Date(obj.dob * 1000);\r\n                        var day = date2.getDate();\r\n                        var month = date2.getMonth() + 1;\r\n                        var year = date2.getFullYear();\r\n                        console.log(obj)\r\n                        return (\r\n                        <tr>\r\n                          <td key={obj.name}>{obj.name}</td>\r\n                          <td key={obj.cnic}>{obj.cnic}</td>\r\n                          <td key={obj.f_name}>{obj.f_name}</td>\r\n                          <td key={obj.m_name}>{obj.m_name}</td>\r\n                          <td key={obj.f_cnic}>{obj.f_cnic}</td>\r\n                          <td key={obj.m_cnic}>{obj.m_cnic}</td>\r\n                          <td key={obj.gender}>{obj.gender}</td>\r\n                          <td key={obj.dob}>{day + \"/\" + month + \"/\" + year}</td>\r\n                          <td key={obj.city}>{obj.city}</td>\r\n                          <td key={obj.isDied}>{obj.isDied == true ? \"Die\" : \"Alive\"}</td>\r\n                        </tr>\r\n                        );\r\n                      }\r\n                  })\r\n              \r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default ShowUnionCouncil;\r\n","E:\\Identity\\src\\Pages\\ShowWeapon.js",["165","166","167","168","169","170","171"],"import { useState,useEffect } from \"react\";\r\nimport { useStore } from \"../context/GlobalState\";\r\n\r\nfunction ShowWeapon() {\r\n  const [{ allcnics,contract }] = useStore();\r\n  const [alldata, setalldata] = useState([]);\r\n  const [_cnic, setcnic] = useState(\"\");\r\n  \r\n  console.log(allcnics);\r\n\r\n  useEffect(()=>{\r\n    if(allcnics != null){\r\n      allcnics.map(async(obj) => {\r\n            let data = await contract.methods.WeaponLisenceData(obj).call();\r\n            if(data.cnic != \"\"){ \r\n             setalldata(alldata => [...alldata, data]);\r\n            }  \r\n       }) \r\n    }\r\n  },[allcnics])\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <h2>Weapon</h2>\r\n        <button\r\n          className=\"btn btn-info\"\r\n          onClick={() => {\r\n            window.location.href = \"/weapon-Lisence\";\r\n          }}\r\n        >\r\n          Add Weapon\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-12\">\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Your CNIC\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={(e) => {\r\n                setcnic(e.target.value);\r\n              }}\r\n              required\r\n            />\r\n            &nbsp;\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">CNIC</th>\r\n            <th scope=\"col\">Weapon type</th>\r\n            <th scope=\"col\">Lisence #</th>\r\n            <th scope=\"col\">Status</th>\r\n            <th scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {_cnic == \"\"\r\n            ? alldata.map((obj) => {\r\n                  var date2 = new Date(obj.date * 1000);\r\n                  var day = date2.getDate();\r\n                  var month = date2.getMonth() + 1;\r\n                  var year = date2.getFullYear();\r\n                  console.log(obj)\r\n                  return (\r\n                    <tr>\r\n                      <td>{obj.cnic}</td>\r\n                      <td>{obj.weapon_type}</td>\r\n                      <td>{obj.lisence_no}</td>\r\n                      <td>{obj.weapon_issued == true ? \"Issued\" : \"Banned\"}</td>\r\n                      <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                    </tr>\r\n                  );\r\n                })\r\n            : alldata.map((obj) => {\r\n                  if (obj.cnic == _cnic) {\r\n                    var date2 = new Date(obj.date * 1000);\r\n                    var day = date2.getDate();\r\n                    var month = date2.getMonth() + 1;\r\n                    var year = date2.getFullYear();\r\n\r\n                    return (\r\n                      <tr>\r\n                        <td>{obj.cnic}</td>\r\n                        <td>{obj.weapon_type}</td>\r\n                        <td>{obj.lisence_no}</td>\r\n                        <td>{obj.weapon_issued == true ? \"Issued\" : \"Banned\"}</td>\r\n                        <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                })\r\n            }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default ShowWeapon;\r\n","E:\\Identity\\src\\Pages\\UnionLogin.js",[],"E:\\Identity\\src\\Pages\\WeaponLogin.js",[],"E:\\Identity\\src\\Pages\\UnionCounci.js",["172","173"],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FormControl, InputGroup } from \"react-bootstrap\";\r\nimport { useStore } from \"../context/GlobalState\";\r\nimport { AddUnionCouncil } from \"../store/asyncActions\";\r\nimport Loader from \"../images/loader.gif\";\r\n\r\nfunction UnionCouncil() {\r\n  const [name, setname] = useState(\"\");\r\n  // const[cnic,setcnic] = useState(\"\")\r\n  const [fname, setfname] = useState(\"\");\r\n  const [mname, setmname] = useState(\"\");\r\n  const [fcnic, setfcnic] = useState(\"\");\r\n  const [mcnic, setmcnic] = useState(\"\");\r\n  const [gender, setgender] = useState(\"\");\r\n  const [dob, setdob] = useState(0);\r\n  const [city, setcity] = useState(\"Karachi\");\r\n\r\n  var [{ allcnics, contract, accounts }, dispatch] = useStore();\r\n  const [isTransactionInProcess, setTransactionInprocess] = useState(false);\r\n  const [isTransactionSuccessful, setTransactionSuccessful] = useState(true);\r\n  const [transactionError, setTransactionError] = useState(\"\");\r\n  const [cnic22, setCnic22] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  var complete_cnic = \"\";\r\n\r\n  const generateCnic = () => {\r\n    var newcnic = \"\";\r\n    allcnics.map((obj) => {\r\n      newcnic = obj;\r\n    });\r\n    console.log(newcnic);\r\n\r\n    var val1 = \"\";\r\n    var val2 = \"\";\r\n    var val3 = \"\";\r\n    var i;\r\n    for (i = 0; i < newcnic.length; i++) {\r\n      var alpha = \"\";\r\n      if (i < 6) {\r\n        alpha = newcnic.charAt(i);\r\n        val1 = val1.concat(alpha);\r\n      } else if (i >= 6 && i < 13) {\r\n        alpha = newcnic.charAt(i);\r\n        val2 = val2.concat(alpha);\r\n      } else {\r\n        alpha = newcnic.charAt(i);\r\n        val3 = val3.concat(alpha);\r\n      }\r\n    }\r\n    // now  generating new cnic by increment of 1 in val2\r\n    val2 = parseInt(val2);\r\n    val2 = val2 + 1;\r\n    val2 = val2.toString();\r\n    complete_cnic = complete_cnic.concat(val1);\r\n    complete_cnic = complete_cnic.concat(val2);\r\n    complete_cnic = complete_cnic.concat(val3);\r\n    document.getElementById(\"cnic\").value = complete_cnic;\r\n    setCnic22(complete_cnic);\r\n    console.log(complete_cnic);\r\n  };\r\n\r\n  const setfdetail = (e) => {\r\n    setfcnic(e.target.value);\r\n    // eslint-disable-next-line array-callback-return\r\n    allcnics.map((obj) => {\r\n      console.log(obj);\r\n      if (obj === e.target.value) {\r\n        contract.methods\r\n          .UnionConcilData(e.target.value)\r\n          .call()\r\n          .then((obj) => {\r\n            console.log(obj.name);\r\n            setfname(obj.name);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const setmdetail = (e) => {\r\n    setmcnic(e.target.value);\r\n    // eslint-disable-next-line array-callback-return\r\n    allcnics.map((obj) => {\r\n      if (obj === e.target.value) {\r\n        contract.methods\r\n          .UnionConcilData(e.target.value)\r\n          .call()\r\n          .then((obj) => {\r\n            console.log(obj.name);\r\n            setmname(obj.name);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(name);\r\n    console.log(complete_cnic);\r\n    console.log(fname);\r\n    console.log(mname);\r\n    console.log(fcnic);\r\n    console.log(mcnic);\r\n    console.log(gender);\r\n    console.log(dob);\r\n    console.log(city);\r\n\r\n    setTransactionSuccessful(true);\r\n    setTransactionError(\"\");\r\n\r\n    try {\r\n      setTransactionInprocess(true);\r\n      const newTransaction = {\r\n        name: name,\r\n        cnic: cnic22,\r\n        f_name: fname,\r\n        m_name: mname,\r\n        f_cnic: fcnic,\r\n        m_cnic: mcnic,\r\n        gender: gender,\r\n        dob: dob,\r\n        city: city,\r\n      };\r\n      await AddUnionCouncil(contract, accounts, newTransaction, dispatch);\r\n      window.location.href = \"/show-unoin\";\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(true);\r\n    } catch (error) {\r\n      console.log(\"error trax = \", error);\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(false);\r\n      setTransactionError(error.message);\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.setItem(\"union\", \"false\");\r\n    window.location.href = \"/landing\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button className=\"btn btn-info\" onClick={() => navigate(-1)}>\r\n          Back\r\n        </button>\r\n        <button className=\"btn btn-info\" onClick={logOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-primary\">\r\n            <div className=\"card-header\">\r\n              <h4>Add Union Council</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"name\"\r\n                      onChange={(e) => setname(e.target.value)}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">CNIC</label>\r\n                    <InputGroup>\r\n                      <FormControl\r\n                        aria-label=\"Recipient's username with two button addons\"\r\n                        disabled\r\n                        value={cnic22}\r\n                        id=\"cnic\"\r\n                      />\r\n                      <input\r\n                        type=\"button\"\r\n                        // className=\"form-control\"\r\n                        onClick={generateCnic}\r\n                        value=\"Generate Cnic\"\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"fathercnic\">Father CNIC</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"fathercnic\"\r\n                      // onChange={(e) => setfcnic(e.target.value)}\r\n                      onChange={(e) => setfdetail(e)}\r\n                      // value={fcnic}\r\n                      // maxLength={13}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"fathername\">Father Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"fathername\"\r\n                      value={fname}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"mothercnic\">Mother CNIC</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"mothercnic\"\r\n                      onChange={(e) => setmdetail(e)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"mothername\">Mother Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"mothername\"\r\n                      value={mname}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Gender </label>\r\n                    <br />\r\n                    <div className=\"form-check-inline\">\r\n                      <label className=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Male\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optradio\"\r\n                          onChange={(e) => setgender(e.target.value)}\r\n                        />\r\n                        Male\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check-inline\">\r\n                      <label className=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Female\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optradio\"\r\n                          onChange={(e) => setgender(e.target.value)}\r\n                        />\r\n                        Female\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"dateOFBirth\">Bate Of Birth</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"mothercnic\"\r\n                      onChange={(e) => {\r\n                        var date1 = new Date(e.target.value);\r\n                        var date2 = date1.getTime() / 1000;\r\n                        setdob(date2);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"city\">City</label>\r\n                    <select\r\n                      id=\"city\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => setcity(e.target.value)}\r\n                    >\r\n                      <option value=\"Karachi\" selected>\r\n                        Karachi\r\n                      </option>\r\n                      <option value=\"Hyderabad\">Hyderabad</option>\r\n                      <option value=\"Multan\">Multan</option>\r\n                      <option value=\"Lahore\">Lahore</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-lg btn-block\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              <center>\r\n                {isTransactionInProcess && (\r\n                  <img width=\"40px\" src={Loader} alt=\"Loading...\" />\r\n                )}\r\n                {isTransactionSuccessful == true ? (\r\n                  <div style={{ color: \"green\" }}></div>\r\n                ) : null}\r\n                {!isTransactionSuccessful && (\r\n                  <div style={{ color: \"red\" }}>{transactionError}</div>\r\n                )}\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UnionCouncil;\r\n","E:\\Identity\\src\\Pages\\TrafficChallan.js",["174"],"import React, { useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport { useStore } from \"../context/GlobalState\";\r\nimport { AddTrafficChallan } from \"../store/asyncActions\";\r\nimport Loader from \"../images/loader.gif\";\r\n\r\nfunction TrafficChallan() {\r\n  const [cnic, setcnic] = useState(\"\");\r\n  const [vnum, setvnum] = useState(\"\");\r\n  const [ctype, setctype] = useState(\"Helmet\");\r\n  const [cfee, setcfee] = useState(0);\r\n  const [date, setdate] = useState(0);\r\n  const [{ contract, accounts }, dispatch] = useStore();\r\n  const [isTransactionInProcess, setTransactionInprocess] = useState(false);\r\n  const [isTransactionSuccessful, setTransactionSuccessful] = useState(true);\r\n  const [transactionError, setTransactionError] = useState(\"\");\r\n\r\n  const viewFee = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.value === \"Helmet\") {\r\n      document.getElementById(\"getFee\").value = 200;\r\n      setcfee(200);\r\n    }\r\n\r\n    if (e.target.value === \"Double Passenger\") {\r\n      document.getElementById(\"getFee\").value = 400;\r\n      setcfee(400);\r\n    }\r\n\r\n    if (e.target.value === \"Over Speeding\") {\r\n      document.getElementById(\"getFee\").value = 600;\r\n      setcfee(600);\r\n    }\r\n\r\n    if (e.target.value === \"Wrong Side\") {\r\n      document.getElementById(\"getFee\").value = 800;\r\n      setcfee(800);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(cnic);\r\n    console.log(vnum);\r\n    console.log(ctype);\r\n    console.log(cfee);\r\n    console.log(date);\r\n\r\n    setTransactionSuccessful(true);\r\n    setTransactionError(\"\");\r\n\r\n    try {\r\n      setTransactionInprocess(true);\r\n      const newTransaction = {\r\n        cnic: cnic,\r\n        vehicle_no: vnum,\r\n        challan_type: ctype,\r\n        amount: cfee,\r\n        date: date,\r\n      };\r\n      await AddTrafficChallan(contract, accounts, newTransaction, dispatch);\r\n\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(true);\r\n    } catch (error) {\r\n      console.log(\"error trax = \", error);\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(false);\r\n      setTransactionError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-xl-6\">\r\n          <div className=\"card card-primary\">\r\n            <div className=\"card-header\">\r\n              <h4>Traffic Challan</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Enter CNIC#</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cnic\"\r\n                      onChange={(e) => setcnic(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Enter Vehicle#</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"ABC-123\"\r\n                      name=\"cnic\"\r\n                      onChange={(e) => setvnum(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"vehicle\">Challan Type</label>\r\n                    <select\r\n                      id=\"vehicle\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        viewFee(e);\r\n                        setctype(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option value=\"Helmet\" selected>\r\n                        Helmet\r\n                      </option>\r\n                      <option value=\"Double Passenger\">Double Passenger</option>\r\n                      <option value=\"Over Speeding\">Over Speeding</option>\r\n                      <option value=\"Wrong Side\">Wrong Side</option>\r\n                    </select>\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"weaponNum\">Challan Fees</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"getFee\"\r\n                      className=\"form-control\"\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"12\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"weaponNum\">Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"getFee\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        var date1 = new Date(e.target.value);\r\n                        var date2 = date1.getTime() / 1000;\r\n                        setdate(date2);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-lg btn-block\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              <center>\r\n                {isTransactionInProcess && (\r\n                  <img width=\"40px\" src={Loader} alt=\"Loading...\" />\r\n                )}\r\n                {isTransactionSuccessful == true ? (\r\n                  <div style={{ color: \"green\" }}></div>\r\n                ) : null}\r\n                {!isTransactionSuccessful && (\r\n                  <div style={{ color: \"red\" }}>{transactionError}</div>\r\n                )}\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default TrafficChallan;\r\n","E:\\Identity\\src\\Pages\\WeaponLisence.js",["175","176","177"],"import React, { useState,useEffect } from \"react\";\r\nimport { useStore } from \"../context/GlobalState\";\r\nimport { AddWeaponLisence } from \"../store/asyncActions\";\r\nimport Loader from \"../images/loader.gif\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction WeaponLisence() {\r\n  const [cnic, setCnic] = useState(\"\");\r\n  const [wtype, setWtype] = useState(\"Self-loading pistols\");\r\n  const [newlisence,setnewlisence] = useState(\"\");\r\n  const [date, setDate] = useState(0);\r\n  const [{ contract, accounts, allcnics }, dispatch] = useStore();\r\n  const [isTransactionInProcess, setTransactionInprocess] = useState(false);\r\n  const [isTransactionSuccessful, setTransactionSuccessful] = useState(true);\r\n  const [transactionError, setTransactionError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  \r\n  var val1 = \"\";\r\n  var val2 = \"\";\r\n  const [complete_lisence, set_completelisence] = useState(\"\");\r\n  // store incremental license\r\n  var inclisence = \"\";\r\n\r\n  useEffect(()=>{\r\n    if(allcnics != null){\r\n     allcnics.map((obj) => {\r\n      contract.methods.WeaponLisenceData(obj).call().then((obj)=>{\r\n            console.log(obj.lisence_no);\r\n            setnewlisence(obj.lisence_no);     \r\n        });\r\n      });\r\n    }\r\n  },[allcnics]);\r\n\r\n\r\n  const generateLisence = () => {\r\n    if (newlisence === \"\") {\r\n      inclisence = \"ABC100001\";\r\n      document.getElementById(\"lisence\").value = inclisence;\r\n      set_completelisence(inclisence);\r\n    } else {\r\n      for (var i = 0; i < newlisence.length; i++) {\r\n        var alpha = \"\";\r\n        if (i < 3) {\r\n          alpha = newlisence.charAt(i);\r\n          val1 = val1.concat(alpha);\r\n        } else {\r\n          alpha = newlisence.charAt(i);\r\n          val2 = val2.concat(alpha);\r\n        }\r\n      }\r\n      val2 = parseInt(val2);\r\n      val2 = val2 + 1;\r\n      val2 = val2.toString();\r\n      inclisence = inclisence.concat(val1);\r\n      inclisence = inclisence.concat(val2);\r\n      console.log(newlisence);\r\n      console.log(inclisence);\r\n      document.getElementById(\"lisence\").value = inclisence;\r\n      set_completelisence(inclisence);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // console.log(String(inclisence))\r\n    // console.log(wtype)\r\n    //   console.log(lisence)\r\n    //  console.log(date)\r\n\r\n    setTransactionSuccessful(true);\r\n    setTransactionError(\"\");\r\n\r\n    try {\r\n      setTransactionInprocess(true);\r\n      const newTransaction = {\r\n        cnic: cnic,\r\n        weapon_type: wtype,\r\n        lisence_no: complete_lisence,\r\n        date: date,\r\n      };\r\n      console.log(\"transaction obj = \", newTransaction);\r\n      await AddWeaponLisence(contract, accounts, newTransaction, dispatch);\r\n\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(true);\r\n    } catch (error) {\r\n      console.log(\"error trax = \", error);\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(false);\r\n      setTransactionError(error.message);\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.setItem(\"weapon\", \"false\");\r\n    window.location.href = \"/landing\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button className=\"btn btn-info\" onClick={() => navigate(-1)}>\r\n          Back\r\n        </button>\r\n        <button className=\"btn btn-info\" onClick={logOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-primary\">\r\n            <div className=\"card-header\">\r\n              <h4>Weapon Lisence</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Enter CNIC#</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cnic\"\r\n                      onChange={(e) => {\r\n                        setCnic(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"weapon\">Weapon</label>\r\n\r\n                    <select\r\n                      id=\"vehicle\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        setWtype(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option value=\"Self-loading pistols\" selected>\r\n                        Self-loading pistols\r\n                      </option>\r\n                      <option value=\"Rifles and carbines\">\r\n                        Rifles and carbines\r\n                      </option>\r\n                      <option value=\"Sub-machine guns\">Sub-machine guns</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"weaponNum\">Weapon Lisence#</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"lisence\"\r\n                      className=\"form-control\"\r\n                      name=\"lisence\"\r\n                      disabled\r\n                    />\r\n                    <br></br>\r\n                    <input\r\n                      type=\"button\"\r\n                      className=\"form-control\"\r\n                      onClick={generateLisence}\r\n                      value=\"Generate Lisence#\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"weaponNum\">Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"lisence\"\r\n                      onChange={(e) => {\r\n                        var date1 = new Date(e.target.value);\r\n                        var date2 = date1.getTime() / 1000;\r\n                        setDate(date2);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-lg btn-block\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              {isTransactionInProcess && (\r\n                <img width=\"40px\" src={Loader} alt=\"Loading...\" />\r\n              )}\r\n              {isTransactionSuccessful == true ? (\r\n                <div style={{ color: \"green\" }}></div>\r\n              ) : null}\r\n              {!isTransactionSuccessful && (\r\n                <div style={{ color: \"red\" }}>{transactionError}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeaponLisence;\r\n","E:\\Identity\\src\\Pages\\ShowEducation.js",["178","179","180","181"],"import { useState,useEffect } from \"react\";\r\nimport { useStore } from \"../context/GlobalState\";\r\n\r\nfunction ShowEducation() {\r\n  var [{ allcnics,contract }] = useStore();\r\n  const [alldata, setalldata] = useState([]);\r\n  const [_cnic, setcnic] = useState(\"\");\r\n  console.log(allcnics);\r\n\r\n  useEffect(()=>{\r\n    if(allcnics != null){\r\n      allcnics.map(async(obj) => {\r\n          for(var i=0; i<2; i++){ \r\n            let data = await contract.methods.EducationData(obj,i).call();\r\n            console.log(data)\r\n            setalldata(alldata => [...alldata, data]);  \r\n          }\r\n        }) \r\n    }\r\n  },[allcnics])\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <h2>Education</h2>\r\n\r\n        <button\r\n          className=\"btn btn-info\"\r\n          onClick={() => {\r\n            window.location.href = \"/education\";\r\n          }}\r\n        >\r\n          Add Education\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-12\">\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Your CNIC\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={(e) => {\r\n                setcnic(e.target.value);\r\n              }}\r\n              required\r\n            />\r\n            &nbsp;\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">CNIC</th>\r\n            <th scope=\"col\">Subject</th>\r\n            <th scope=\"col\">Marks</th>\r\n            <th scope=\"col\">Percentage</th>\r\n            <th scope=\"col\">Grade</th>\r\n            <th scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {_cnic == \"\"\r\n            ? alldata.map((obj) => {\r\n                  var date2 = new Date(obj.date * 1000);\r\n                  var day = date2.getDate();\r\n                  var month = date2.getMonth() + 1;\r\n                  var year = date2.getFullYear();\r\n\r\n                  return (\r\n                    <tr>\r\n                      <td>{obj.cnic}</td>\r\n                      <td>{obj.subject}</td>\r\n                      <td>{obj.marks}</td>\r\n                      <td>{obj.percentage}%</td>\r\n                      <td>{obj.grade}</td>\r\n                      <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                    </tr>\r\n                  );\r\n               })\r\n            : alldata.map((obj) =>{\r\n                  if (obj.cnic == _cnic) {\r\n                    var date2 = new Date(obj.date * 1000);\r\n                    var day = date2.getDate();\r\n                    var month = date2.getMonth() + 1;\r\n                    var year = date2.getFullYear();\r\n\r\n                    return (\r\n                      <tr>\r\n                        <td>{obj.cnic}</td>\r\n                        <td>{obj.subject}</td>\r\n                        <td>{obj.marks}</td>\r\n                        <td>{obj.percentage}%</td>\r\n                        <td>{obj.grade}</td>\r\n                        <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                })\r\n              }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default ShowEducation;\r\n","E:\\Identity\\src\\Pages\\TrafficLogin.js",[],"E:\\Identity\\src\\Pages\\CriminalRecord.js",["182"],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useStore } from \"../context/GlobalState\";\r\nimport { AddCriminalRecord } from \"../store/asyncActions\";\r\nimport Loader from \"../images/loader.gif\";\r\n\r\nfunction CriminalRecord() {\r\n  const [cnic, setCnic] = useState(\"\");\r\n  const [record, setrecord] = useState(false);\r\n  const [remarks, setremarks] = useState(\"\");\r\n  const [date, setDate] = useState(0);\r\n  const [{ contract, accounts }, dispatch] = useStore();\r\n  const [isTransactionInProcess, setTransactionInprocess] = useState(false);\r\n  const [isTransactionSuccessful, setTransactionSuccessful] = useState(true);\r\n  const [transactionError, setTransactionError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(cnic);\r\n    console.log(record);\r\n    console.log(remarks);\r\n    console.log(date);\r\n\r\n    setTransactionSuccessful(true);\r\n    setTransactionError(\"\");\r\n\r\n    try {\r\n      setTransactionInprocess(true);\r\n      const newTransaction = {\r\n        cnic: cnic,\r\n        record_found: record,\r\n        remarks: remarks,\r\n        date: date,\r\n      };\r\n      await AddCriminalRecord(contract, accounts, newTransaction, dispatch);\r\n\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(true);\r\n    } catch (error) {\r\n      console.log(\"error trax = \", error);\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(false);\r\n      setTransactionError(error.message);\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.setItem(\"criminal\", \"false\");\r\n    window.location.href = \"/landing\";\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button className=\"btn btn-info\" onClick={() => navigate(-1)}>\r\n          Back\r\n        </button>\r\n        <button className=\"btn btn-info\" onClick={logOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-primary\">\r\n            <div className=\"card-header\">\r\n              <h4>Add Criminal Record</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Enter CNIC#</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cnic\"\r\n                      onChange={(e) => setCnic(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Record Found </label>\r\n                    <br />\r\n                    <div className=\"form-check-inline\">\r\n                      <label className=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          value={true}\r\n                          className=\"form-check-input\"\r\n                          name=\"optradio\"\r\n                          onChange={(e) => setrecord(e.target.value)}\r\n                        />\r\n                        Yes\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check-inline\">\r\n                      <label className=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          value={false}\r\n                          className=\"form-check-input\"\r\n                          name=\"optradio\"\r\n                          onChange={(e) => setrecord(e.target.value)}\r\n                        />\r\n                        No\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Remarks</label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      onChange={(e) => setremarks(e.target.value)}\r\n                    >\r\n                      {\" \"}\r\n                    </textarea>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        var date1 = new Date(e.target.value);\r\n                        var date2 = date1.getTime() / 1000;\r\n                        setDate(date2);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-lg btn-block\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n\r\n              {isTransactionInProcess && (\r\n                <img width=\"40px\" src={Loader} alt=\"Loading...\" />\r\n              )}\r\n              {isTransactionSuccessful == true ? (\r\n                <div style={{ color: \"green\" }}></div>\r\n              ) : null}\r\n              {!isTransactionSuccessful && (\r\n                <div style={{ color: \"red\" }}>{transactionError}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CriminalRecord;\r\n","E:\\Identity\\src\\Pages\\CriminalLogin.js",[],"E:\\Identity\\src\\Pages\\EducationLogin.js",[],"E:\\Identity\\src\\Pages\\Death.js",["183","184","185"],"import React, { useState } from \"react\";\r\nimport { FormControl, InputGroup } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useStore } from \"../context/GlobalState\";\r\nimport { AddDeath } from \"../store/asyncActions\";\r\nimport Loader from \"../images/loader.gif\";\r\n\r\nfunction Death() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const[cnic,setcnic] = useState(\"\")\r\n    var [{ contract,accounts },dispatch] = useStore();\r\n    const [isTransactionInProcess, setTransactionInprocess] = useState(false);\r\n    const [isTransactionSuccessful, setTransactionSuccessful] = useState(true);\r\n    const [transactionError, setTransactionError] = useState(\"\");\r\n\r\n    const logOut = () => {\r\n        localStorage.setItem(\"death\", \"false\");\r\n        window.location.href = \"/landing\";\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        console.log(cnic);\r\n    \r\n        setTransactionSuccessful(true);\r\n        setTransactionError(\"\");\r\n    \r\n        try {\r\n          setTransactionInprocess(true);\r\n          const newTransaction = {\r\n            cnic: cnic,\r\n          };\r\n\r\n          await AddDeath(contract, accounts, newTransaction, dispatch);\r\n        //   window.location.href='/show-unoin'\r\n          setTransactionInprocess(false);\r\n          setTransactionSuccessful(true);\r\n        } catch (error) {\r\n          console.log(\"error trax = \", error);\r\n          setTransactionInprocess(false);\r\n          setTransactionSuccessful(false);\r\n          setTransactionError(error.message);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button className=\"btn btn-info\" onClick={() => navigate(-1)}>\r\n          Back\r\n        </button>\r\n        <button className=\"btn btn-info\" onClick={logOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-primary\">\r\n            <div className=\"card-header\">\r\n              <h4>Add Death Status</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">CNIC</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"name\"\r\n                      onChange={(e)=>setcnic(e.target.value)}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                        <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-lg btn-block\"\r\n                          onClick={handleSubmit}\r\n                        >\r\n                        Die\r\n                        </button>\r\n                </div>\r\n                <center>\r\n                    {isTransactionInProcess && (\r\n                    <img width=\"40px\" src={Loader} alt=\"Loading...\" />\r\n                    )}\r\n                    {isTransactionSuccessful == true ? (\r\n                    <div style={{ color: \"green\" }}></div>\r\n                    ) : null}\r\n                    {!isTransactionSuccessful && (\r\n                    <div style={{ color: \"red\" }}>{transactionError}</div>\r\n                    )}\r\n              </center>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Death;\r\n","E:\\Identity\\src\\Pages\\ShowCriminal.js",["186","187","188","189"],"import React from \"react\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { useStore } from \"../context/GlobalState\";\r\n\r\nfunction ShowCriminal() {\r\n  const [{ allcnics,contract }] = useStore();\r\n  const [alldata, setalldata] = useState([]);\r\n  const [_cnic, setcnic] = useState(\"\");\r\n \r\n  console.log(allcnics);\r\n\r\n  useEffect(()=>{\r\n    if(allcnics != null){\r\n      allcnics.map(async(obj) => {\r\n        for(var i=0; i<3; i++){\r\n            let data = await contract.methods.CriminalRecordData(obj,i).call();\r\n            setalldata(alldata => [...alldata, data]);\r\n        }\r\n       }) \r\n    }\r\n  },[allcnics])\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <h2>Criminal</h2>\r\n        <button\r\n          className=\"btn btn-info\"\r\n          onClick={() => {\r\n            window.location.href = \"/criminal\";\r\n          }}\r\n        >\r\n          Add Criminal\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-12\">\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Your CNIC\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={(e) => {\r\n                setcnic(e.target.value);\r\n              }}\r\n              required\r\n            />\r\n            &nbsp;\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">CNIC</th>\r\n            <th scope=\"col\">Remarks</th>\r\n            <th scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {_cnic == \"\"\r\n            ? alldata.map((obj) =>{\r\n                  var date2 = new Date(obj.date * 1000);\r\n                  var day = date2.getDate();\r\n                  var month = date2.getMonth() + 1;\r\n                  var year = date2.getFullYear();\r\n\r\n                  return (\r\n                    <tr>\r\n                      <td>{obj.cnic}</td>\r\n                      <td>{obj.remarks}</td>\r\n                      <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                    </tr>\r\n                  );\r\n               })\r\n            : alldata.map((obj) => {\r\n                  if (obj.cnic == _cnic) {\r\n                    var date2 = new Date(obj.date * 1000);\r\n                    var day = date2.getDate();\r\n                    var month = date2.getMonth() + 1;\r\n                    var year = date2.getFullYear();\r\n\r\n                    return (\r\n                      <tr>\r\n                        <td>{obj.cnic}</td>\r\n                        <td>{obj.remarks}</td>\r\n                        <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n               })\r\n           }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default ShowCriminal;\r\n","E:\\Identity\\src\\Pages\\Educations.js",["190","191","192","193"],"import React, { useState } from \"react\";\r\nimport { useStore } from \"../context/GlobalState\";\r\nimport { AddEducation } from \"../store/asyncActions\";\r\nimport Loader from \"../images/loader.gif\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Educations() {\r\n  const [getView, setView] = React.useState(0);\r\n\r\n  const [cnic, setcnic] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"SSC\");\r\n  const [marks, setmarks] = useState(0);\r\n  const [percentage, setpercentage] = useState(0.0);\r\n  const [grades, setgrade] = useState(\"\");\r\n  const [date, setdate] = useState(0);\r\n\r\n  const [{ contract, accounts }, dispatch] = useStore();\r\n  const [isTransactionInProcess, setTransactionInprocess] = useState(false);\r\n  const [isTransactionSuccessful, setTransactionSuccessful] = useState(true);\r\n  const [transactionError, setTransactionError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const initialState = {\r\n    marks1: \"\",\r\n    marks2: \"\",\r\n    marks3: \"\",\r\n    marks4: \"\",\r\n    marks5: \"\",\r\n    marks6: \"\",\r\n    marks7: \"\",\r\n  };\r\n\r\n  const [getMarks, setMarks] = React.useState(initialState);\r\n\r\n  const Calculation = (e) => {\r\n    e.preventDefault();\r\n    const total =\r\n      Number(getMarks.marks1) +\r\n      Number(getMarks.marks2) +\r\n      Number(getMarks.marks3) +\r\n      Number(getMarks.marks4) +\r\n      Number(getMarks.marks5) +\r\n      Number(getMarks.marks6) +\r\n      Number(getMarks.marks7);\r\n    document.getElementById(\"total\").value = total;\r\n    setmarks(total);\r\n    const percent = parseFloat(((total * 100) / 700).toFixed(0));\r\n    document.getElementById(\"percent\").value = percent;\r\n    setpercentage(percent);\r\n    if (percent >= 80.0 && percent <= 100.0) {\r\n      document.getElementById(\"grade\").value = \"A+\";\r\n      setgrade(\"A+\");\r\n    } else if (percent >= 70.0 && percent < 80.0) {\r\n      document.getElementById(\"grade\").value = \"A\";\r\n      setgrade(\"A\");\r\n    } else if (percent >= 60.0 && percent < 70.0) {\r\n      document.getElementById(\"grade\").value = \"B\";\r\n      setgrade(\"B\");\r\n    } else if (percent >= 50.0 && percent < 60.0) {\r\n      document.getElementById(\"grade\").value = \"C\";\r\n      setgrade(\"C\");\r\n    } else if (percent >= 40.0 && percent < 50.0) {\r\n      document.getElementById(\"grade\").value = \"D\";\r\n      setgrade(\"D\");\r\n    } else {\r\n      document.getElementById(\"grade\").value = \"Fail\";\r\n      setgrade(\"Fail\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(cnic);\r\n    console.log(subject);\r\n    console.log(marks);\r\n    console.log(grades);\r\n    console.log(percentage);\r\n    console.log(date);\r\n\r\n    setTransactionSuccessful(true);\r\n    setTransactionError(\"\");\r\n\r\n    try {\r\n      setTransactionInprocess(true);\r\n      const newTransaction = {\r\n        cnic: cnic,\r\n        subject: subject,\r\n        marks: marks,\r\n        percentage: percentage,\r\n        grade: grades,\r\n        date: date,\r\n      };\r\n      await AddEducation(contract, accounts, newTransaction, dispatch);\r\n      window.location.href='/show-education'\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(true);\r\n    } catch (error) {\r\n      console.log(\"error trax = \", error);\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(false);\r\n      setTransactionError(error.message);\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.setItem(\"education\", \"false\");\r\n    window.location.href = \"/landing\";\r\n  };\r\n\r\n  const handleCNICOnChange = (e) => {\r\n    setcnic(e.replace(/[^0-9\\.-]+/g, \"\"));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-5\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <button className=\"btn btn-info\" onClick={() => navigate(-1)}>\r\n            Back\r\n          </button>\r\n          <button className=\"btn btn-info\" onClick={logOut}>\r\n            LOGOUT\r\n          </button>\r\n        </div>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card card-primary\">\r\n              <div className=\"card-header\">\r\n                <h4>SSC & HSC Certificate</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"cnic\">Enter CNIC#</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"cnic\"\r\n                        onChange={(e) => handleCNICOnChange(e.target.value)}\r\n                        maxlength=\"16\"\r\n                        value={cnic}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"city\">Subject</label>\r\n                      <select\r\n                        id=\"subject\"\r\n                        className=\"form-control\"\r\n                        onChange={(e) => setsubject(e.target.value)}\r\n                      >\r\n                        <option value=\"SSC\" selected>\r\n                          SSC\r\n                        </option>\r\n                        <option value=\"HSC\" selected>\r\n                          HSC\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"weaponNum\">Marks</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">\r\n                        Englishb\r\n                      </InputGroup.Text>\r\n                      <FormControl\r\n                        onInput={(e) => {\r\n                          e.target.value = Math.max(0, parseInt(e.target.value))\r\n                            .toString()\r\n                            .slice(0, 2);\r\n                        }}\r\n                        type=\"number\"\r\n                        placeholder=\"marks\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          setMarks({ ...getMarks, marks1: e.target.value });\r\n                        }}\r\n                        value={getMarks.marks1}\r\n                      />\r\n                      <InputGroup.Text id=\"basic-addon1\">/100</InputGroup.Text>\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">\r\n                        English2\r\n                      </InputGroup.Text>\r\n                      <FormControl\r\n                        onInput={(e) => {\r\n                          e.target.value = Math.max(0, parseInt(e.target.value))\r\n                            .toString()\r\n                            .slice(0, 2);\r\n                        }}\r\n                        type=\"number\"\r\n                        placeholder=\"marks\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          setMarks({ ...getMarks, marks2: e.target.value });\r\n                        }}\r\n                        value={getMarks.marks2}\r\n                      />\r\n                      <InputGroup.Text id=\"basic-addon1\">/100</InputGroup.Text>\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">Urdu</InputGroup.Text>\r\n                      <FormControl\r\n                        onInput={(e) => {\r\n                          e.target.value = Math.max(0, parseInt(e.target.value))\r\n                            .toString()\r\n                            .slice(0, 2);\r\n                        }}\r\n                        type=\"number\"\r\n                        placeholder=\"marks\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          setMarks({ ...getMarks, marks3: e.target.value });\r\n                        }}\r\n                        value={getMarks.marks3}\r\n                      />\r\n                      <InputGroup.Text id=\"basic-addon1\">/100</InputGroup.Text>\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">Maths</InputGroup.Text>\r\n                      <FormControl\r\n                        onInput={(e) => {\r\n                          e.target.value = Math.max(0, parseInt(e.target.value))\r\n                            .toString()\r\n                            .slice(0, 2);\r\n                        }}\r\n                        type=\"number\"\r\n                        placeholder=\"marks\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          setMarks({ ...getMarks, marks4: e.target.value });\r\n                        }}\r\n                        value={getMarks.marks4}\r\n                      />\r\n                      <InputGroup.Text id=\"basic-addon1\">/100</InputGroup.Text>\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">\r\n                        Physics\r\n                      </InputGroup.Text>\r\n                      <FormControl\r\n                        onInput={(e) => {\r\n                          e.target.value = Math.max(0, parseInt(e.target.value))\r\n                            .toString()\r\n                            .slice(0, 2);\r\n                        }}\r\n                        type=\"number\"\r\n                        placeholder=\"marks\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          setMarks({ ...getMarks, marks5: e.target.value });\r\n                        }}\r\n                        value={getMarks.marks5}\r\n                      />\r\n                      <InputGroup.Text id=\"basic-addon1\">/100</InputGroup.Text>\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">\r\n                        Chemistry\r\n                      </InputGroup.Text>\r\n                      <FormControl\r\n                        onInput={(e) => {\r\n                          e.target.value = Math.max(0, parseInt(e.target.value))\r\n                            .toString()\r\n                            .slice(0, 2);\r\n                        }}\r\n                        type=\"number\"\r\n                        placeholder=\"marks\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          setMarks({ ...getMarks, marks6: e.target.value });\r\n                        }}\r\n                        value={getMarks.marks6}\r\n                      />\r\n                      <InputGroup.Text id=\"basic-addon1\">/100</InputGroup.Text>\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">P.ST</InputGroup.Text>\r\n                      <FormControl\r\n                        onInput={(e) => {\r\n                          e.target.value = Math.max(0, parseInt(e.target.value))\r\n                            .toString()\r\n                            .slice(0, 2);\r\n                        }}\r\n                        type=\"number\"\r\n                        placeholder=\"marks\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          setMarks({ ...getMarks, marks7: e.target.value });\r\n                        }}\r\n                        value={getMarks.marks7}\r\n                      />\r\n                      <InputGroup.Text id=\"basic-addon1\">/100</InputGroup.Text>\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary btn-lg\"\r\n                      onClick={Calculation}\r\n                    >\r\n                      Calculate\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">\r\n                        Total Marks\r\n                      </InputGroup.Text>\r\n                      <FormControl\r\n                        onInput={(e) => {\r\n                          e.target.value = Math.max(0, parseInt(e.target.value))\r\n                            .toString()\r\n                            .slice(0, 2);\r\n                        }}\r\n                        type=\"number\"\r\n                        placeholder=\"marks\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        id=\"total\"\r\n                        disabled\r\n                      />\r\n                      <InputGroup.Text id=\"basic-addon1\">/700</InputGroup.Text>\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">\r\n                        Percent%\r\n                      </InputGroup.Text>\r\n                      <FormControl\r\n                        placeholder=\"percent\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        id=\"percent\"\r\n                        disabled\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text id=\"basic-addon1\">Grade</InputGroup.Text>\r\n                      <FormControl\r\n                        placeholder=\"grade\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        id=\"grade\"\r\n                        disabled\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        var date1 = new Date(e.target.value);\r\n                        var date2 = date1.getTime() / 1000;\r\n                        setdate(date2);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* </div> */}\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-lg btn-block\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n\r\n                {isTransactionInProcess && (\r\n                  <img width=\"40px\" src={Loader} alt=\"Loading...\" />\r\n                )}\r\n                {isTransactionSuccessful == true ? (\r\n                  <div style={{ color: \"green\" }}></div>\r\n                ) : null}\r\n                {!isTransactionSuccessful && (\r\n                  <div style={{ color: \"red\" }}>{transactionError}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Educations;\r\n","E:\\Identity\\src\\Pages\\MerriageRecord.js",["194","195","196","197","198"],"import React, { useState } from \"react\";\r\nimport { useStore } from \"../context/GlobalState\";\r\nimport { AddMarriage } from \"../store/asyncActions\";\r\nimport Loader from \"../images/loader.gif\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction MerriageRecord() {\r\n  const [boyname, setboyname] = useState(\"\");\r\n  const [girlname, setgirlname] = useState(\"\");\r\n  const [boycnic, setboycnic] = useState(\"\");\r\n  const [girlcnic, setgirlcnic] = useState(\"\");\r\n  const [date, setDate] = useState(0);\r\n  const [{ allcnics,contract, accounts }, dispatch] = useStore();\r\n  const [isTransactionInProcess, setTransactionInprocess] = useState(false);\r\n  const [isTransactionSuccessful, setTransactionSuccessful] = useState(true);\r\n  const [transactionError, setTransactionError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(boyname);\r\n    console.log(boycnic);\r\n    console.log(girlname);\r\n    console.log(girlcnic);\r\n    console.log(date);\r\n\r\n    setTransactionSuccessful(true);\r\n    setTransactionError(\"\");\r\n\r\n    try {\r\n      setTransactionInprocess(true);\r\n      const newTransaction = {\r\n        boy_name: boyname,\r\n        boy_cnic: boycnic,\r\n        girl_name: girlname,\r\n        girl_cnic: girlcnic,\r\n        date: date,\r\n      };\r\n      await AddMarriage(contract, accounts, newTransaction, dispatch);\r\n\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(true);\r\n    } catch (error) {\r\n      console.log(\"error trax = \", error);\r\n      setTransactionInprocess(false);\r\n      setTransactionSuccessful(false);\r\n      setTransactionError(error.message);\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.setItem(\"marriage\", \"false\");\r\n    window.location.href = \"/landing\";\r\n  };\r\n\r\n  const handleBoyCNICOnChange = (e) => {\r\n    setboycnic(e.target.value);\r\n    allcnics.map((obj) => {\r\n      if (obj == e.target.value) {\r\n          contract.methods.UnionConcilData(e.target.value).call().then((obj)=>{\r\n          console.log(obj.name)\r\n          setboyname(obj.name);\r\n         });\r\n      }\r\n  });\r\n  };\r\n\r\n  const handleGirlLCNICOnChange = (e) => {\r\n    setgirlcnic(e.target.value);\r\n    allcnics.map((obj) => {\r\n      if (obj == e.target.value) {\r\n          contract.methods.UnionConcilData(e.target.value).call().then((obj)=>{\r\n          console.log(obj.name)\r\n          setgirlname(obj.name);\r\n         });\r\n      }\r\n  });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button className=\"btn btn-info\" onClick={() => navigate(-1)}>\r\n          Back\r\n        </button>\r\n        <button className=\"btn btn-info\" onClick={logOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-primary\">\r\n            <div className=\"card-header\">\r\n              <h4>Add Marriage</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Enter Boy CNIC#</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cnic\"\r\n                      onChange={(e) => handleBoyCNICOnChange(e)}\r\n                      //maxlength=\"13\"\r\n                      value={boycnic}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Enter Boy Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cnic\"\r\n                      disabled\r\n                      value={boyname}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Enter Girl CNIC#</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cnic\"\r\n                      onChange={(e) => handleGirlLCNICOnChange(e)}\r\n                      //maxlength=\"13\"\r\n                      value={girlcnic}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Enter Girl Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cnic\"\r\n                      disabled\r\n                      value={girlname}\r\n                    />\r\n                  </div>\r\n                </div>\r\n               \r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cnic\">Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        var date1 = new Date(e.target.value);\r\n                        var date2 = date1.getTime() / 1000;\r\n                        setDate(date2);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-lg btn-block\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              <center>\r\n                {isTransactionInProcess && (\r\n                  <img width=\"40px\" src={Loader} alt=\"Loading...\" />\r\n                )}\r\n                {isTransactionSuccessful == true ? (\r\n                  <div style={{ color: \"green\" }}></div>\r\n                ) : null}\r\n                {!isTransactionSuccessful && (\r\n                  <div style={{ color: \"red\" }}>{transactionError}</div>\r\n                )}\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MerriageRecord;\r\n","E:\\Identity\\src\\Pages\\MarriageLogin.js",[],"E:\\Identity\\src\\Pages\\ShowChallan.js",["199","200","201","202","203","204","205","206","207","208","209","210","211"],"import React, { useState,useEffect } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useStore } from \"../context/GlobalState\";\r\n\r\nfunction ShowChallan() {\r\n  const [{  allcnics,contract }] = useStore();\r\n  const [alldata, setalldata] = useState([]);\r\n  const [_cnic, setcnic] = useState(\"\");\r\n  const [getView, setView] = React.useState(0);\r\n\r\n  console.log(allcnics);\r\n\r\n  useEffect(()=>{\r\n    if(allcnics != null){\r\n      allcnics.map(async(obj) => {\r\n        for(var i=0; i<3; i++){\r\n            let data = await contract.methods.TrafficChallanData(obj,i).call();\r\n            setalldata(alldata => [...alldata, data]);\r\n        }\r\n       }) \r\n    }\r\n  },[allcnics])\r\n\r\n\r\n  const changeHandle1 = (e) => {\r\n    e.preventDefault();\r\n    setView(1);\r\n  };\r\n\r\n  const changeHandle2 = (e) => {\r\n    e.preventDefault();\r\n    setView(2);\r\n  };\r\n  console.log(getView);\r\n  const logOut = () => {\r\n    localStorage.setItem(\"traffic\", \"false\");\r\n    window.location.href = \"/landing\";\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-5\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <h2>Challan</h2>\r\n          <div>\r\n            <button className=\"btn btn-info\" onClick={logOut}>\r\n            LOGOUT\r\n            </button>\r\n            <button\r\n            className=\"btn btn-info\"\r\n            onClick={() => {\r\n              window.location.href = \"/challan\";\r\n            }}\r\n          >\r\n            Add Challan\r\n          </button>\r\n        </div>\r\n        </div>\r\n        <div className=\"row justify-content-around mt-5\">\r\n          <div className=\"col-md-6 col-12\">\r\n            <div className=\"p-5 bg-white rounded shadow text-center m-3 mb-4 w-md-50\">\r\n              <h2 className=\"mb-4 text-dark\">Paid Challan</h2>\r\n              <button\r\n                className=\"btn-lg btn btn-primary text-uppercase\"\r\n                onClick={changeHandle1}\r\n              >\r\n                Show All\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-12\">\r\n            <div className=\"p-5 bg-white rounded shadow text-center m-3 mb-4 w-md-50\">\r\n              <h2 className=\"mb-4 text-dark\">Not Paid Challan</h2>\r\n              <button\r\n                className=\"btn-lg btn btn-primary text-uppercase\"\r\n                onClick={changeHandle2}\r\n              >\r\n                Show All\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {getView === 1 ? (\r\n        <div className=\"container\">\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Your CNIC\"\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  onChange={(e) => {\r\n                    setcnic(e.target.value);\r\n                  }}\r\n                  required\r\n                />\r\n                &nbsp;\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Table striped bordered hover className=\"mt-5\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">CNIC</th>\r\n                <th scope=\"col\">Vehicle #</th>\r\n                <th scope=\"col\">Challan Type</th>\r\n                <th scope=\"col\">Amount</th>\r\n                <th scope=\"col\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {_cnic == \"\"\r\n                ? alldata.map((obj) => {\r\n                    console.log(obj)\r\n                    if(obj.isPaid == true){\r\n                      var date2 = new Date(obj.date * 1000);\r\n                      var day = date2.getDate();\r\n                      var month = date2.getMonth() + 1;\r\n                      var year = date2.getFullYear();\r\n                      return (\r\n                        <tr>\r\n                          <td>{obj.cnic}</td>\r\n                          <td>{obj.vehicle_no}</td>\r\n                          <td>{obj.challan_type}</td>\r\n                          <td>{obj.amount}</td>\r\n                          <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                        </tr>\r\n                      );\r\n                    }\r\n                  })\r\n                \r\n                : alldata.map((obj) => {\r\n                     console.log(obj)\r\n                      if (obj.cnic == _cnic && obj.isPaid == true) {\r\n                        var date2 = new Date(obj.date * 1000);\r\n                        var day = date2.getDate();\r\n                        var month = date2.getMonth() + 1;\r\n                        var year = date2.getFullYear();\r\n                        return (\r\n                          <tr>\r\n                            <td>{obj.cnic}</td>\r\n                            <td>{obj.vehicle_no}</td>\r\n                            <td>{obj.challan_type}</td>\r\n                            <td>{obj.amount}</td>\r\n                            <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                   })\r\n               }\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      ) : null}\r\n\r\n      {getView === 2 ? (\r\n        <div className=\"container\">\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Your CNIC\"\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  onChange={(e) => {\r\n                    setcnic(e.target.value);\r\n                  }}\r\n                  required\r\n                />\r\n                &nbsp;\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Table striped bordered hover className=\"mt-5\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">CNIC</th>\r\n                <th scope=\"col\">Vehicle #</th>\r\n                <th scope=\"col\">Challan Type</th>\r\n                <th scope=\"col\">Amount</th>\r\n                <th scope=\"col\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {_cnic == \"\"\r\n                ? alldata.map((obj) => {\r\n                    console.log(obj)\r\n                    if(obj.isPaid == false){\r\n                      var date2 = new Date(obj.date * 1000);\r\n                      var day = date2.getDate();\r\n                      var month = date2.getMonth() + 1;\r\n                      var year = date2.getFullYear();\r\n\r\n                      return (\r\n                        <tr>\r\n                          <td>{obj.cnic}</td>\r\n                          <td>{obj.vehicle_no}</td>\r\n                          <td>{obj.challan_type}</td>\r\n                          <td>{obj.amount}</td>\r\n                          <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                        </tr>\r\n                      );\r\n                    }\r\n                    })\r\n                : alldata.map((obj) => {\r\n                      console.log(obj)  \r\n                      if (obj.cnic == _cnic && obj.isPaid == false) {\r\n                        var date2 = new Date(obj.date * 1000);\r\n                        var day = date2.getDate();\r\n                        var month = date2.getMonth() + 1;\r\n                        var year = date2.getFullYear();\r\n\r\n                        return (\r\n                          <tr>\r\n                            <td>{obj.cnic}</td>\r\n                            <td>{obj.vehicle_no}</td>\r\n                            <td>{obj.challan_type}</td>\r\n                            <td>{obj.amount}</td>\r\n                            <td>{day + \"/\" + month + \"/\" + year}</td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    })\r\n               }\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default ShowChallan;\r\n","E:\\Identity\\src\\Pages\\Navbar.js",["212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"import React, { useEffect, useState } from \"react\";\r\nimport { Nav, Navbar, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { useStore } from \"../context/GlobalState\";\r\nimport { loadBlockchain } from '../store/asyncActions';\r\nimport {chainID} from '../store/actions';\r\n\r\nconst NavbarCom = () => {\r\n  const [isLogIn, setIsLogIn] = useState(\"\");\r\n  const [{web3,chainid},dispatch] = useStore();\r\n  const { ethereum } = window;\r\n  \r\n  useEffect(async() => {\r\n    //let token = localStorage.getItem(\"token\");\r\n    //setIsLogIn(token);\r\n    console.log(window.location.href)\r\n    if(ethereum.isConnected() == true){\r\n      await loadBlockchain(dispatch);\r\n    }\r\n\r\n\r\n  },[]);\r\n\r\n  const logOut = () => {\r\n    console.log(\"0\");\r\n    localStorage.setItem(\"token\", false);\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  \r\n    \r\n    const isMetaMaskInstalled = () => {\r\n        return Boolean(ethereum && ethereum.isMetaMask);\r\n    };\r\n    \r\n    const initialize = async () => {\r\n        const checkWallet = Boolean(ethereum && ethereum.isMetaMask);\r\n        if(checkWallet == true){\r\n            await ethereum.request({ method: 'eth_requestAccounts' });\r\n            document.getElementById('collect__now').innerText = 'Connected';\r\n            document.getElementById('collect__now').disabled = true;\r\n            await loadBlockchain(dispatch);\r\n          //  setStatus(\"Connected\");\r\n           // dispatch(setupConnection(1));\r\n        }else{\r\n            const MetaMaskClientCheck = () => {\r\n                //Now we check to see if Metmask is installed\r\n                if (!isMetaMaskInstalled()) {\r\n                //If it isn't installed we ask the user to click to install it\r\n                document.getElementById('collect__now').innerText = 'Click here to install MetaMask!';\r\n                //When the button is clicked we call this function\r\n                document.getElementById('collect__now').onclick = onClickInstall;\r\n                //The button is now disabled\r\n                document.getElementById('collect__now').disabled = false;\r\n                } else {\r\n                    //If it is installed we change our button text\r\n                    document.getElementById('collect__now').innerText = 'Connect';\r\n                    document.getElementById('collect__now').onclick = onClickConnect;\r\n                    //The button is now disabled\r\n                    document.getElementById('collect__now').disabled = false;\r\n                }\r\n            };\r\n            MetaMaskClientCheck();\r\n            \r\n        }\r\n    };\r\n    \r\n    const onClickInstall = () => {\r\n        document.getElementById('collect__now').href = \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\r\n    }\r\n\r\n    const onClickConnect = async () => {\r\n        try {\r\n          await loadBlockchain(dispatch);\r\n          //  await ethereum.request({ method: 'eth_requestAccounts' });\r\n          //  setStatus(\"Connected\");\r\n          //  dispatch(setupConnection(1));\r\n        } catch (error) {\r\n        console.error(error);\r\n        }\r\n    };\r\n\r\n    async function switchNetwork(){\r\n      try {\r\n        await ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: '0x61' }],\r\n        });\r\n        dispatch(chainID(97));\r\n        } catch (switchError) {\r\n        // This error code indicates that the chain has not been added to MetaMask.\r\n        if (switchError.code === 4902) {\r\n          try {\r\n          await ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [\r\n            {\r\n              chainId: '0x61',\r\n              chainName: 'BSC Testnet',\r\n              rpcUrls: ['https://data-seed-prebsc-1-s1.binance.org:8545/'] /* ... */,\r\n            },\r\n            ],\r\n          });\r\n          dispatch(chainID(97))\r\n          } catch (addError) {\r\n           console.log(\"Error in switch network = \", addError.message);\r\n          }\r\n        }\r\n        // handle other \"switch\" errors\r\n      }\r\n   }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" style={{background:\"#12567D\"}}>\r\n      <>\r\n        <Navbar.Brand href=\"#home\" style={{color:\"white\"}}>Blockchain</Navbar.Brand>\r\n        {/* {isLogIn ? ( */}\r\n          <Nav className=\"justify-content-end flex-row width-100\">\r\n            {\r\n              window.location.href == 'http://localhost:3000/'  || window.location.href == 'http://localhost:3000/#' || window.location.href == 'http://localhost:3000'? \r\n                <null/> \r\n              :\r\n                <Navbar.Brand href=\"/\">Goto Home</Navbar.Brand>\r\n            }\r\n            {\r\n              web3 === null ? (\r\n                <Navbar.Brand href=\"#\" id=\"collect__now\" onClick={initialize}>Connect Wallet</Navbar.Brand>       \r\n              ):(chainid !== 97 ? (<Navbar.Brand href=\"#\" onClick={switchNetwork}>Change Network</Navbar.Brand>): \r\n              \r\n              (\r\n                window.location.href != 'http://localhost:3000/'  || window.location.href == 'http://localhost:3000/#'?\r\n                <Navbar.Brand id=\"btn_dashboard\" href=\"/landing\">Goto Dashboard</Navbar.Brand>\r\n                :\r\n                <null/>\r\n              ))\r\n            }\r\n          \r\n            {/* <NavDropdown title=\"\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item onClick={logOut}>SignOut</NavDropdown.Item>\r\n            </NavDropdown> */}\r\n          </Nav>\r\n        {/* ) : null} */}\r\n      </>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavbarCom;\r\n","E:\\Identity\\src\\context\\GlobalState.js",["226"],"import React, { useEffect,createContext, useReducer, useContext } from 'react';\r\nimport AppReducer from '../store/AppReducer';\r\n\r\nimport { loadBlockchain } from '../store/asyncActions';\r\n// Initial state\r\nconst initialState = {\r\n  transactions: [],\r\n  web3: null,\r\n  accounts: [],\r\n  contract: null,\r\n  contract1: null,\r\n  web3LoadingErrorMessage:\"\",\r\n  web3Loadded: false,\r\n  owner: \"\",\r\n  allcnics: null,\r\n  chainid: 0,\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    useEffect(()=> {\r\n      //  loadBlockchain(dispatch);\r\n    },[])    \r\n      \r\n\r\n    return (<GlobalContext.Provider value={[state,dispatch]}>\r\n                {children}\r\n            </GlobalContext.Provider>);\r\n}\r\n\r\nexport const useStore = () => useContext(GlobalContext);","E:\\Identity\\src\\store\\asyncActions.js",["227"],"import {setupContractOwner,setupWeb3, setupContract, addEthereumAccounts, chainID ,web3LoadingError, cnics} from \"./actions\";\r\nimport Web3 from \"web3\";\r\nimport { NATION_ABI, NATION_ADDRESS } from '../contract/NationConract';\r\n\r\nexport const loadBlockchain = async(dispatch) =>{   \r\n    try {\r\n        console.log(\"Web3 = \",Web3);\r\n        console.log(\"Web3.givenProvider = \",Web3.givenProvider);\r\n\r\n        if(Web3.givenProvider){\r\n        \r\n            const web3 = new Web3(Web3.givenProvider);\r\n            await Web3.givenProvider.enable();\r\n            dispatch(setupWeb3(web3));\r\n            const contract = new web3.eth.Contract(NATION_ABI,NATION_ADDRESS);\r\n            console.log(\"contract = \",contract);\r\n            console.log(\"contract.methods = \",contract.methods);\r\n            dispatch(setupContract(contract));\r\n        \r\n            let accounts = await web3.eth.getAccounts();\r\n            dispatch(addEthereumAccounts(accounts));\r\n            \r\n            let chainid = await web3.eth.net.getId();\r\n            dispatch(chainID(chainid));\r\n            console.log(chainid)\r\n\r\n            let allcnics = await contract.methods.getCnics().call()\r\n            console.log(\"all cnics = \",allcnics);\r\n            dispatch(cnics(allcnics));\r\n\r\n            window.ethereum.on('accountsChanged', async (acc) => {\r\n                accounts = await web3.eth.getAccounts();\r\n                dispatch(addEthereumAccounts(accounts));\r\n                console.log(acc)\r\n            });\r\n\r\n            // let contractOwner = await contract.methods.owner().call()\r\n            // console.log(\"Contract Owner = \",contractOwner);\r\n            // dispatch(setupContractOwner(contractOwner));\r\n        \r\n        }\r\n        else {\r\n            dispatch(web3LoadingError(\"Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp!\"))\r\n        }\r\n    }\r\n    catch(error){\r\n        console.log(\"Error in loading Web3 = \",error);\r\n        if(error.code===4001){\r\n            \r\n            dispatch(web3LoadingError(error.message));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const AddWeaponLisence = async(contract, accounts, transaction, dispatch)=>{\r\n    console.log(\"before transaction\");\r\n    const receipt =  await contract.methods.Weapon_Lisence(transaction.cnic,transaction.weapon_type,transaction.lisence_no,transaction.date)\r\n    .send({\r\n        from : accounts[0]\r\n        \r\n    });\r\n    console.log(\"after  transaction \", receipt);\r\n    \r\n}\r\n\r\nexport const AddMarriage = async(contract, accounts, transaction, dispatch)=>{\r\n    console.log(\"before transaction\");\r\n    const receipt =  await contract.methods.Marriage(transaction.boy_name,transaction.boy_cnic,transaction.girl_name,transaction.girl_cnic,transaction.date)\r\n    .send({\r\n        from : accounts[0]\r\n        \r\n    });\r\n    console.log(\"after  transaction \", receipt);\r\n    \r\n}\r\n\r\n\r\nexport const AddTrafficChallan = async(contract, accounts, transaction, dispatch)=>{\r\n    console.log(\"before transaction\");\r\n    const receipt =  await contract.methods.Traffic_Challan(transaction.cnic,transaction.vehicle_no,transaction.challan_type,transaction.amount,transaction.date)\r\n    .send({\r\n        from : accounts[0]\r\n        \r\n    });\r\n    console.log(\"after  transaction \", receipt);\r\n    \r\n}\r\n\r\n\r\nexport const AddPayChallan = async(contract, accounts, transaction, dispatch)=>{\r\n    console.log(\"before transaction\");\r\n    console.log(transaction)\r\n    const receipt =  await contract.methods.PayChallan(transaction.cnic,transaction.vehicle_no,transaction.challan_type,transaction.date)\r\n    .send({\r\n        from : accounts[0],\r\n        value: transaction.challan_fee\r\n    });\r\n    console.log(\"after  transaction \", receipt);\r\n    \r\n}\r\n\r\nexport const AddEducation = async(contract, accounts, transaction, dispatch)=>{\r\n    console.log(\"before transaction\");\r\n    const receipt =  await contract.methods.Educations(transaction.cnic,transaction.subject,transaction.marks,transaction.percentage,transaction.grade,transaction.date)\r\n    .send({\r\n        from : accounts[0]\r\n        \r\n    });\r\n    console.log(\"after  transaction \", receipt);\r\n    \r\n}\r\n\r\n\r\nexport const AddUnionCouncil = async(contract, accounts, transaction, dispatch)=>{\r\n    console.log(\"before transaction\")\r\n    console.log((transaction.cnic))\r\n    const receipt =  await contract.methods.Union_Concil(transaction.name,transaction.cnic,transaction.f_name,transaction.m_name,transaction.f_cnic,transaction.m_cnic,transaction.gender,transaction.dob,transaction.city)\r\n    .send({\r\n        from : accounts[0]\r\n        \r\n    });\r\n    console.log(\"after  transaction \", receipt);\r\n    \r\n}\r\n\r\n\r\nexport const AddDeath = async(contract, accounts, transaction, dispatch)=>{\r\n    console.log(\"before transaction\")\r\n    console.log((transaction.cnic))\r\n    const receipt =  await contract.methods.death(transaction.cnic)\r\n    .send({\r\n        from : accounts[0]\r\n        \r\n    });\r\n    console.log(\"after  transaction \", receipt);\r\n    \r\n}\r\n\r\n\r\nexport const AddCriminalRecord = async(contract, accounts, transaction, dispatch)=>{\r\n    console.log(\"before transaction\");\r\n    const receipt =  await contract.methods.Criminal_Record(transaction.cnic,transaction.remarks,transaction.record_found,transaction.date)\r\n    .send({\r\n        from : accounts[0]\r\n        \r\n    });\r\n    console.log(\"after  transaction \", receipt);\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n","E:\\Identity\\src\\store\\AppReducer.js",["228"],"export default (state, action) => {\r\n    switch(action.type) {\r\n      \r\n      case 'SETUP_WEB3':\r\n        return {\r\n          ...state,\r\n          web3: action.payload,\r\n          web3LoadingErrorMessage: \"\",\r\n          web3Loadded: true\r\n        }\r\n      case 'SETUP_CONTRACT':\r\n        return {\r\n          ...state,\r\n          contract: action.payload\r\n        }\r\n\r\n\r\n      case 'ADD_ETHEREUM_ACCOUNTS':\r\n        return {\r\n          ...state,\r\n          accounts: action.payload\r\n        }\r\n\r\n        case 'CHAIN_ID':\r\n          return {\r\n            ...state,\r\n            chainid: action.payload\r\n          }\r\n\r\n      case 'WEB3_LOADING_ERROR':\r\n        return {\r\n          ...state,\r\n          web3LoadingErrorMessage: action.errorMessage,\r\n          web3Loadded: false\r\n        }\r\n\r\n        case 'CNICS':\r\n          return {\r\n            ...state,\r\n            allcnics: action.payload,  \r\n          }  \r\n\r\n      case 'SETUPCONTRACTOWNER':\r\n      return {\r\n        ...state,\r\n        owner: action.payload,  \r\n      }\r\n      \r\n      default:\r\n        return state;\r\n    }\r\n  }","E:\\Identity\\src\\store\\actions.js",[],"E:\\Identity\\src\\contract\\NationConract.js",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":2,"column":27,"nodeType":"235","messageId":"236","endLine":2,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":41,"column":14,"nodeType":"235","messageId":"239","endLine":41,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":48,"column":14,"nodeType":"235","messageId":"239","endLine":48,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":167,"column":33,"nodeType":"242","messageId":"243","endLine":167,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":169,"column":36,"nodeType":"242","messageId":"243","endLine":169,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":233,"column":41,"nodeType":"242","messageId":"243","endLine":233,"endColumn":43},{"ruleId":"240","severity":1,"message":"241","line":235,"column":30,"nodeType":"242","messageId":"243","endLine":235,"endColumn":32},{"ruleId":"240","severity":1,"message":"241","line":266,"column":40,"nodeType":"242","messageId":"243","endLine":266,"endColumn":42},{"ruleId":"240","severity":1,"message":"241","line":267,"column":40,"nodeType":"242","messageId":"243","endLine":267,"endColumn":42},{"ruleId":"240","severity":1,"message":"241","line":271,"column":32,"nodeType":"242","messageId":"243","endLine":271,"endColumn":34},{"ruleId":"240","severity":1,"message":"241","line":326,"column":48,"nodeType":"242","messageId":"243","endLine":326,"endColumn":50},{"ruleId":"233","severity":1,"message":"234","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"233","severity":1,"message":"244","line":5,"column":9,"nodeType":"235","messageId":"236","endLine":5,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"245","severity":1,"message":"246","line":10,"column":11,"nodeType":"247","endLine":10,"endColumn":48},{"ruleId":"245","severity":1,"message":"246","line":26,"column":15,"nodeType":"247","endLine":26,"endColumn":57},{"ruleId":"245","severity":1,"message":"246","line":32,"column":15,"nodeType":"247","endLine":32,"endColumn":57},{"ruleId":"245","severity":1,"message":"246","line":35,"column":15,"nodeType":"247","endLine":35,"endColumn":57},{"ruleId":"248","severity":1,"message":"249","line":67,"column":15,"nodeType":"247","endLine":67,"endColumn":49},{"ruleId":"250","severity":1,"message":"251","line":20,"column":7,"nodeType":"252","endLine":20,"endColumn":17,"suggestions":"253"},{"ruleId":"240","severity":1,"message":"241","line":96,"column":19,"nodeType":"242","messageId":"243","endLine":96,"endColumn":21},{"ruleId":"240","severity":1,"message":"241","line":114,"column":66,"nodeType":"242","messageId":"243","endLine":114,"endColumn":68},{"ruleId":"254","severity":1,"message":"255","line":120,"column":41,"nodeType":"256","messageId":"257","endLine":120,"endColumn":43},{"ruleId":"240","severity":1,"message":"241","line":121,"column":34,"nodeType":"242","messageId":"243","endLine":121,"endColumn":36},{"ruleId":"240","severity":1,"message":"241","line":138,"column":60,"nodeType":"242","messageId":"243","endLine":138,"endColumn":62},{"ruleId":"240","severity":1,"message":"258","line":15,"column":26,"nodeType":"242","messageId":"243","endLine":15,"endColumn":28},{"ruleId":"250","severity":1,"message":"251","line":20,"column":5,"nodeType":"252","endLine":20,"endColumn":15,"suggestions":"259"},{"ruleId":"240","severity":1,"message":"241","line":69,"column":18,"nodeType":"242","messageId":"243","endLine":69,"endColumn":20},{"ruleId":"240","severity":1,"message":"241","line":81,"column":46,"nodeType":"242","messageId":"243","endLine":81,"endColumn":48},{"ruleId":"254","severity":1,"message":"255","line":86,"column":33,"nodeType":"256","messageId":"257","endLine":86,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":87,"column":32,"nodeType":"242","messageId":"243","endLine":87,"endColumn":34},{"ruleId":"240","severity":1,"message":"241","line":98,"column":48,"nodeType":"242","messageId":"243","endLine":98,"endColumn":50},{"ruleId":"254","severity":1,"message":"260","line":30,"column":24,"nodeType":"256","messageId":"261","endLine":30,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":316,"column":42,"nodeType":"242","messageId":"243","endLine":316,"endColumn":44},{"ruleId":"240","severity":1,"message":"241","line":167,"column":42,"nodeType":"242","messageId":"243","endLine":167,"endColumn":44},{"ruleId":"254","severity":1,"message":"260","line":27,"column":25,"nodeType":"256","messageId":"261","endLine":27,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":34,"column":5,"nodeType":"252","endLine":34,"endColumn":15,"suggestions":"262"},{"ruleId":"240","severity":1,"message":"241","line":200,"column":40,"nodeType":"242","messageId":"243","endLine":200,"endColumn":42},{"ruleId":"250","severity":1,"message":"251","line":20,"column":5,"nodeType":"252","endLine":20,"endColumn":15,"suggestions":"263"},{"ruleId":"240","severity":1,"message":"241","line":72,"column":18,"nodeType":"242","messageId":"243","endLine":72,"endColumn":20},{"ruleId":"254","severity":1,"message":"255","line":90,"column":33,"nodeType":"256","messageId":"257","endLine":90,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":91,"column":32,"nodeType":"242","messageId":"243","endLine":91,"endColumn":34},{"ruleId":"240","severity":1,"message":"241","line":152,"column":40,"nodeType":"242","messageId":"243","endLine":152,"endColumn":42},{"ruleId":"233","severity":1,"message":"264","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":21},{"ruleId":"233","severity":1,"message":"265","line":2,"column":23,"nodeType":"235","messageId":"236","endLine":2,"endColumn":33},{"ruleId":"240","severity":1,"message":"241","line":90,"column":46,"nodeType":"242","messageId":"243","endLine":90,"endColumn":48},{"ruleId":"250","severity":1,"message":"251","line":21,"column":5,"nodeType":"252","endLine":21,"endColumn":15,"suggestions":"266"},{"ruleId":"240","severity":1,"message":"241","line":68,"column":18,"nodeType":"242","messageId":"243","endLine":68,"endColumn":20},{"ruleId":"254","severity":1,"message":"255","line":83,"column":33,"nodeType":"256","messageId":"257","endLine":83,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":84,"column":32,"nodeType":"242","messageId":"243","endLine":84,"endColumn":34},{"ruleId":"233","severity":1,"message":"267","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":17},{"ruleId":"233","severity":1,"message":"268","line":9,"column":19,"nodeType":"235","messageId":"236","endLine":9,"endColumn":26},{"ruleId":"269","severity":1,"message":"270","line":111,"column":29,"nodeType":"271","messageId":"272","endLine":111,"endColumn":30,"suggestions":"273"},{"ruleId":"240","severity":1,"message":"241","line":407,"column":42,"nodeType":"242","messageId":"243","endLine":407,"endColumn":44},{"ruleId":"254","severity":1,"message":"260","line":58,"column":24,"nodeType":"256","messageId":"261","endLine":58,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":59,"column":15,"nodeType":"242","messageId":"243","endLine":59,"endColumn":17},{"ruleId":"254","severity":1,"message":"260","line":70,"column":24,"nodeType":"256","messageId":"261","endLine":70,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":71,"column":15,"nodeType":"242","messageId":"243","endLine":71,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":177,"column":42,"nodeType":"242","messageId":"243","endLine":177,"endColumn":44},{"ruleId":"250","severity":1,"message":"251","line":22,"column":5,"nodeType":"252","endLine":22,"endColumn":15,"suggestions":"274"},{"ruleId":"240","severity":1,"message":"241","line":122,"column":22,"nodeType":"242","messageId":"243","endLine":122,"endColumn":24},{"ruleId":"254","severity":1,"message":"255","line":123,"column":37,"nodeType":"256","messageId":"257","endLine":123,"endColumn":39},{"ruleId":"240","severity":1,"message":"241","line":125,"column":35,"nodeType":"242","messageId":"243","endLine":125,"endColumn":37},{"ruleId":"254","severity":1,"message":"255","line":142,"column":37,"nodeType":"256","messageId":"257","endLine":142,"endColumn":39},{"ruleId":"240","severity":1,"message":"241","line":144,"column":36,"nodeType":"242","messageId":"243","endLine":144,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":144,"column":59,"nodeType":"242","messageId":"243","endLine":144,"endColumn":61},{"ruleId":"240","severity":1,"message":"241","line":203,"column":22,"nodeType":"242","messageId":"243","endLine":203,"endColumn":24},{"ruleId":"254","severity":1,"message":"255","line":204,"column":37,"nodeType":"256","messageId":"257","endLine":204,"endColumn":39},{"ruleId":"240","severity":1,"message":"241","line":206,"column":35,"nodeType":"242","messageId":"243","endLine":206,"endColumn":37},{"ruleId":"254","severity":1,"message":"255","line":223,"column":37,"nodeType":"256","messageId":"257","endLine":223,"endColumn":39},{"ruleId":"240","severity":1,"message":"241","line":225,"column":36,"nodeType":"242","messageId":"243","endLine":225,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":225,"column":59,"nodeType":"242","messageId":"243","endLine":225,"endColumn":61},{"ruleId":"233","severity":1,"message":"275","line":2,"column":23,"nodeType":"235","messageId":"236","endLine":2,"endColumn":34},{"ruleId":"233","severity":1,"message":"276","line":2,"column":36,"nodeType":"235","messageId":"236","endLine":2,"endColumn":45},{"ruleId":"233","severity":1,"message":"277","line":8,"column":10,"nodeType":"235","messageId":"236","endLine":8,"endColumn":17},{"ruleId":"233","severity":1,"message":"278","line":8,"column":19,"nodeType":"235","messageId":"236","endLine":8,"endColumn":29},{"ruleId":"250","severity":1,"message":"279","line":12,"column":13,"nodeType":"256","endLine":21,"endColumn":4},{"ruleId":"240","severity":1,"message":"241","line":16,"column":31,"nodeType":"242","messageId":"243","endLine":16,"endColumn":33},{"ruleId":"250","severity":1,"message":"280","line":21,"column":5,"nodeType":"252","endLine":21,"endColumn":7,"suggestions":"281"},{"ruleId":"233","severity":1,"message":"282","line":23,"column":9,"nodeType":"235","messageId":"236","endLine":23,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":37,"column":24,"nodeType":"242","messageId":"243","endLine":37,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":119,"column":36,"nodeType":"242","messageId":"243","endLine":119,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":119,"column":89,"nodeType":"242","messageId":"243","endLine":119,"endColumn":91},{"ruleId":"240","severity":1,"message":"241","line":119,"column":142,"nodeType":"242","messageId":"243","endLine":119,"endColumn":144},{"ruleId":"240","severity":1,"message":"258","line":130,"column":38,"nodeType":"242","messageId":"243","endLine":130,"endColumn":40},{"ruleId":"240","severity":1,"message":"241","line":130,"column":91,"nodeType":"242","messageId":"243","endLine":130,"endColumn":93},{"ruleId":"233","severity":1,"message":"283","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":24},{"ruleId":"233","severity":1,"message":"284","line":1,"column":9,"nodeType":"235","messageId":"236","endLine":1,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":1,"column":1,"nodeType":"287","endLine":52,"endColumn":4},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-redeclare","'i' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'navigate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contract.methods'. Either include it or remove the dependency array.","ArrayExpression",["290"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.",["291"],"Array.prototype.map() expects a return value from arrow function.","expectedInside",["292"],["293"],"'FormControl' is defined but never used.","'InputGroup' is defined but never used.",["294"],"'getView' is assigned a value but never used.","'setView' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["295","296"],["297"],"'NavDropdown' is defined but never used.","'Container' is defined but never used.","'isLogIn' is assigned a value but never used.","'setIsLogIn' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'dispatch' and 'ethereum'. Either include them or remove the dependency array.",["298"],"'logOut' is assigned a value but never used.","'loadBlockchain' is defined but never used.","'setupContractOwner' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"299","fix":"301"},{"desc":"299","fix":"302"},{"desc":"299","fix":"303"},{"desc":"299","fix":"304"},{"messageId":"305","fix":"306","desc":"307"},{"messageId":"308","fix":"309","desc":"310"},{"desc":"299","fix":"311"},{"desc":"312","fix":"313"},"Update the dependencies array to be: [allcnics, contract.methods]",{"range":"314","text":"315"},{"range":"316","text":"315"},{"range":"317","text":"315"},{"range":"318","text":"315"},{"range":"319","text":"315"},"removeEscape",{"range":"320","text":"321"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"322","text":"323"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"324","text":"315"},"Update the dependencies array to be: [dispatch, ethereum]",{"range":"325","text":"326"},[609,619],"[allcnics, contract.methods]",[584,594],[1242,1252],[609,619],[607,617],[3564,3565],"",[3564,3564],"\\",[676,686],[674,676],"[dispatch, ethereum]"]